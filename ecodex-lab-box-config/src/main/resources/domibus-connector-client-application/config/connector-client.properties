
#activate to enable iSupport message structure
#spring.profiles.active=iSupport

#connector-client.storage.filesystem.message-properties.service=Service1
#connector-client.storage.filesystem.message-properties.action=Action1

server.port=8${lab.id}2

connector-client-rest-url=http://localhost:8${lab.id}2/restservice
spring.codec.max-in-memory-size=20MB

#Used to configure database file for the domibusConnectorClient. By default it is ./database/connector-client-h2-db
spring.datasource.url=jdbc:h2:file:./database/connector-client-h2-db
spring.datasource.username=connectorclient
spring.datasource.password=connectorclient

#Address where the domibusConnectorClient reaches the domibusConnector
connector-client.connector-link.ws.connectorAddress=http://localhost:8${lab.id}1/services/backend

#Name of the alias of the key that the domibusConnectorClient shall encrypt messages to the connector with
connector-client.connector-link.ws.cxf.encryptAlias=connector

#boolean property to indicate wether the domibusConnector can push messages to the client.
connector-client.connector-link.ws.pushEnabled=true

#properties to configure the keystore. Must contain the private key the client uses to sign/decrypt messages
connector-client.connector-link.ws.cxf.keyStore.path=file:config/keystores/client-alice.jks
connector-client.connector-link.ws.cxf.keyStore.password=12345
connector-client.connector-link.ws.cxf.privateKey.alias=alice
connector-client.connector-link.ws.cxf.privateKey.password=12345

#properties to configure the truststore. Must contain the certificate of the domibusConnector with which the client encrypts messages with
connector-client.connector-link.ws.cxf.trustStore.path=file:config/keystores/client-alice.jks
connector-client.connector-link.ws.cxf.trustStore.password=12345

#connector-client.library.schemaValidationMaxSeverityLevel=ERROR

#properties to configure the time-triggered job to get messages from the domibusConnector. Not necessary if client is configured as pushEnabled.
connector-client.scheduler.get-messages-from-connector-job.enabled=false
connector-client.scheduler.get-messages-from-connector-job.repeatInterval=30s

#properties to configure the time-triggered job to check the client backend for new messages to submit.
connector-client.scheduler.submit-messages-to-connector-job.enabled=true
connector-client.scheduler.submit-messages-to-connector-job.repeatInterval=30s


connector-client.storage.filesystem.enabled=true

connector-client.controller.update-storage-status-job.enabled=true
connector-client.controller.update-storage-status-job.repeatInterval=1m

connector-client.controller.auto-confirm-messages-job.enabled=true
connector-client.controller.auto-confirm-messages-job.repeatInterval=1m

connector-client.controller.restore-database-from-storage=false

connector-client.controller.delivery-rest-client.enabled=false
#connector-client.controller.delivery-rest-client.url=http://localhost:8080/svk-eugw-service-ecodex_S/deliveryrestservice
#connector-client.controller.delivery-rest-client.deliverNewMessageMethodUrl=/deliverNewMessageFromConnectorClientToBackend
#connector-client.controller.delivery-rest-client.deliverNewConfirmationMethodUrl=/deliverNewConfirmationFromConnectorClientToBackend

org.springframework.boot.logging.LoggingSystem=Log4J2
logging.config=./config/log4j2.xml


