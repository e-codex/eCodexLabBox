-- *********************************************************************
-- Update Database Script
-- *********************************************************************
-- Change Log: src/main/resources/db/changelog-4.0.2.xml
-- Ran at: 11/02/19 09:20
-- Against: null@offline:oracle?version=11.2.0&changeLogFile=C:\Users\baciuco\workspace\domibus\Domibus-MSH-db\target/liquibase/changelog-4.0.2.oracle
-- Liquibase version: 3.5.3
-- *********************************************************************


-- Changeset src/main/resources/db/changelog-4.0.xml::1525081090763-1::Pion (generated)
CREATE TABLE TB_ACTION (
  ID_PK              INTEGER NOT NULL,
  NAME               VARCHAR2(255),
  VALUE              VARCHAR2(255),
  FK_BUSINESSPROCESS INTEGER,
  CONSTRAINT PK_TB_ACTION PRIMARY KEY (ID_PK)
);

CREATE TABLE TB_ACTION_AUDIT (
  ID_PK             INTEGER      NOT NULL,
  AUDIT_TYPE        VARCHAR2(31) NOT NULL,
  ENTITY_ID         VARCHAR2(255),
  MODIFICATION_TYPE VARCHAR2(255),
  REVISION_DATE     TIMESTAMP,
  USER_NAME         VARCHAR2(255),
  FROM_QUEUE        VARCHAR2(255),
  TO_QUEUE          VARCHAR2(255),
  CONSTRAINT PK_TB_ACTION_AUDIT PRIMARY KEY (ID_PK)
);

CREATE TABLE TB_AGREEMENT (
  ID_PK              INTEGER NOT NULL,
  NAME               VARCHAR2(255),
  TYPE               VARCHAR2(255),
  VALUE              VARCHAR2(255),
  FK_BUSINESSPROCESS INTEGER,
  CONSTRAINT PK_TB_AGREEMENT PRIMARY KEY (ID_PK)
);

CREATE TABLE TB_AUTHENTICATION_ENTRY (
  ID_PK          INTEGER       NOT NULL,
  CERTIFICATE_ID VARCHAR2(255),
  USERNAME       VARCHAR2(255),
  PASSWD         VARCHAR2(255),
  AUTH_ROLES     VARCHAR2(255) NOT NULL,
  ORIGINAL_USER  VARCHAR2(255),
  BACKEND        VARCHAR2(255),
  CONSTRAINT PK_TB_AUTHENTICATION_ENTRY PRIMARY KEY (ID_PK)
);

CREATE TABLE TB_BACK_RCRITERIA_AUD (
  ID_PK             INTEGER NOT NULL,
  REV               INTEGER NOT NULL,
  REVTYPE           NUMBER(3),
  FK_BACKEND_FILTER INTEGER,
  PRIORITY          INTEGER
);

CREATE TABLE TB_BACKEND_FILTER (
  ID_PK        INTEGER NOT NULL,
  BACKEND_NAME VARCHAR2(255),
  PRIORITY     INTEGER,
  CONSTRAINT PK_TB_BACKEND_FILTER PRIMARY KEY (ID_PK)
);

CREATE TABLE TB_BACKEND_FILTER_AUD (
  ID_PK                INTEGER NOT NULL,
  REV                  INTEGER NOT NULL,
  REVTYPE              NUMBER(3),
  BACKEND_NAME         VARCHAR2(255),
  BACKENDNAME_MOD      NUMBER(1),
  PRIORITY             INTEGER,
  INDEX_MOD            NUMBER(1),
  ROUTINGCRITERIAS_MOD NUMBER(1)
);

CREATE TABLE TB_BUSINESS_PROCESS (
  ID_PK INTEGER NOT NULL,
  CONSTRAINT PK_TB_BUSINESS_PROCESS PRIMARY KEY (ID_PK)
);

CREATE TABLE TB_CERTIFICATE (
  ID_PK                       NUMBER(38, 0) NOT NULL,
  CERTIFICATE_ALIAS           VARCHAR2(255) NOT NULL,
  NOT_VALID_BEFORE_DATE       TIMESTAMP,
  NOT_VALID_AFTER_DATE        TIMESTAMP,
  REVOKE_NOTIFICATION_DATE    TIMESTAMP,
  ALERT_IMM_NOTIFICATION_DATE TIMESTAMP,
  ALERT_EXP_NOTIFICATION_DATE TIMESTAMP,
  CERTIFICATE_STATUS          VARCHAR2(255) NOT NULL,
  CERTIFICATE_TYPE            VARCHAR2(255) NOT NULL,
  CONSTRAINT PK_TB_CERTIFICATE PRIMARY KEY (ID_PK)
);

CREATE TABLE TB_CONFIGURATION (
  ID_PK                INTEGER NOT NULL,
  FK_BUSINESSPROCESSES INTEGER,
  FK_PARTY             INTEGER,
  CONSTRAINT PK_TB_CONFIGURATION PRIMARY KEY (ID_PK)
);

CREATE TABLE TB_CONFIGURATION_AUD (
  ID_PK          INTEGER NOT NULL,
  REV            INTEGER NOT NULL,
  REVTYPE        NUMBER(3),
  EXPRESSION     VARCHAR2(255),
  EXPRESSION_MOD NUMBER(1),
  NAME           VARCHAR2(255),
  NAME_MOD       NUMBER(1)
);

CREATE TABLE TB_CONFIGURATION_RAW (
  ID_PK              INTEGER NOT NULL,
  CONFIGURATION_DATE TIMESTAMP,
  XML                BLOB,
  DESCRIPTION        VARCHAR2(255) DEFAULT '',
  CONSTRAINT PK_TB_CONFIGURATION_RAW PRIMARY KEY (ID_PK)
);

CREATE TABLE TB_CONFIGURATION_RAW_AUD (
  ID_PK                 INTEGER NOT NULL,
  REV                   INTEGER NOT NULL,
  REVTYPE               NUMBER(3),
  CONFIGURATION_DATE    TIMESTAMP,
  CONFIGURATIONDATE_MOD NUMBER(1),
  DESCRIPTION           VARCHAR2(255),
  DESCRIPTION_MOD       VARCHAR2(255),
  XML                   BLOB,
  XML_MOD               NUMBER(1)
);

CREATE TABLE TB_ERROR (
  ID_PK             INTEGER NOT NULL,
  CATEGORY          VARCHAR2(255),
  DESCRIPTION_LANG  VARCHAR2(255),
  DESCRIPTION_VALUE VARCHAR2(255),
  ERROR_CODE        VARCHAR2(255),
  ERROR_DETAIL      CLOB,
  ORIGIN            VARCHAR2(255),
  REF_TO_MESSAGE_ID VARCHAR2(255),
  SEVERITY          VARCHAR2(255),
  SHORT_DESCRIPTION VARCHAR2(255),
  SIGNALMESSAGE_ID  INTEGER,
  CONSTRAINT PK_TB_ERROR PRIMARY KEY (ID_PK)
);

CREATE TABLE TB_ERROR_HANDLING (
  ID_PK                          INTEGER NOT NULL,
  BUSINESS_ERROR_NOTIFY_CONSUMER NUMBER(1),
  BUSINESS_ERROR_NOTIFY_PRODUCER NUMBER(1),
  DELIVERY_FAIL_NOTIFY_PRODUCER  NUMBER(1),
  ERROR_AS_RESPONSE              NUMBER(1),
  NAME                           VARCHAR2(255),
  FK_BUSINESSPROCESS             INTEGER,
  CONSTRAINT PK_TB_ERROR_HANDLING PRIMARY KEY (ID_PK)
);

CREATE TABLE TB_ERROR_LOG (
  ID_PK                   INTEGER NOT NULL,
  ERROR_CODE              VARCHAR2(255),
  ERROR_DETAIL            VARCHAR2(255),
  ERROR_SIGNAL_MESSAGE_ID VARCHAR2(255),
  MESSAGE_IN_ERROR_ID     VARCHAR2(255),
  MSH_ROLE                VARCHAR2(255),
  NOTIFIED                TIMESTAMP,
  TIME_STAMP              TIMESTAMP,
  CONSTRAINT PK_TB_ERROR_LOG PRIMARY KEY (ID_PK)
);

CREATE TABLE TB_JOIN_PAYLOAD_PROFILE (
  FK_PAYLOAD INTEGER NOT NULL,
  FK_PROFILE INTEGER NOT NULL
);

CREATE TABLE TB_JOIN_PROCESS_INIT_PARTY (
  PROCESS_FK INTEGER NOT NULL,
  PARTY_FK   INTEGER NOT NULL
);

CREATE TABLE TB_JOIN_PROCESS_LEG (
  PROCESS_FK INTEGER NOT NULL,
  LEG_FK     INTEGER NOT NULL
);

CREATE TABLE TB_JOIN_PROCESS_RESP_PARTY (
  PROCESS_FK INTEGER NOT NULL,
  PARTY_FK   INTEGER NOT NULL
);

CREATE TABLE TB_JOIN_PROPERTY_SET (
  PROPERTY_FK INTEGER NOT NULL,
  SET_FK      INTEGER NOT NULL
);

CREATE TABLE TB_LEG (
  ID_PK                  INTEGER NOT NULL,
  COMPRESS_PAYLOADS      NUMBER(1),
  NAME                   VARCHAR2(255),
  FK_ACTION              INTEGER,
  FK_MPC                 INTEGER,
  FK_ERROR_HANDLING      INTEGER,
  FK_PAYLOAD_PROFILE     INTEGER,
  FK_PROPERTY_SET        INTEGER,
  FK_RECEPTION_AWARENESS INTEGER,
  FK_RELIABILITY         INTEGER,
  FK_SECURITY            INTEGER,
  FK_SERVICE             INTEGER,
  FK_BUSINESSPROCESS     INTEGER,
  CONSTRAINT PK_TB_LEG PRIMARY KEY (ID_PK)
);

CREATE TABLE TB_LEG_TB_MPC (
  LegConfiguration_ID_PK INTEGER NOT NULL,
  partyMpcMap_ID_PK      INTEGER NOT NULL,
  partyMpcMap_KEY        INTEGER NOT NULL
);

CREATE TABLE TB_MEP (
  ID_PK              INTEGER NOT NULL,
  LEG_COUNT          INTEGER,
  NAME               VARCHAR2(255),
  VALUE              VARCHAR2(255),
  FK_BUSINESSPROCESS INTEGER,
  CONSTRAINT PK_TB_MEP PRIMARY KEY (ID_PK)
);

CREATE TABLE TB_MEP_BINDING (
  ID_PK              INTEGER NOT NULL,
  NAME               VARCHAR2(255),
  VALUE              VARCHAR2(255),
  FK_BUSINESSPROCESS INTEGER,
  CONSTRAINT PK_TB_MEP_BINDING PRIMARY KEY (ID_PK)
);

CREATE TABLE TB_MESSAGE_ACKNW (
  ID_PK            INTEGER NOT NULL,
  MESSAGE_ID       VARCHAR2(255),
  FROM_VALUE       VARCHAR2(255),
  TO_VALUE         VARCHAR2(255),
  CREATE_DATE      TIMESTAMP,
  CREATE_USER      VARCHAR2(255),
  ACKNOWLEDGE_DATE TIMESTAMP,
  CONSTRAINT PK_TB_MESSAGE_ACKNW PRIMARY KEY (ID_PK)
);

CREATE TABLE TB_MESSAGE_ACKNW_PROP (
  ID_PK              INTEGER NOT NULL,
  PROPERTY_NAME      VARCHAR2(255),
  PROPERTY_VALUE     VARCHAR2(255),
  FK_MSG_ACKNOWLEDGE INTEGER,
  CONSTRAINT PK_TB_MESSAGE_ACKNW_PROP PRIMARY KEY (ID_PK)
);

CREATE TABLE TB_MESSAGE_INFO (
  ID_PK             INTEGER       NOT NULL,
  MESSAGE_ID        VARCHAR2(255) NOT NULL,
  REF_TO_MESSAGE_ID VARCHAR2(255),
  TIME_STAMP        TIMESTAMP,
  CONSTRAINT PK_TB_MESSAGE_INFO PRIMARY KEY (ID_PK)
);

CREATE TABLE TB_MESSAGE_LOG (
  ID_PK               INTEGER NOT NULL,
  DELETED             TIMESTAMP,
  MESSAGE_ID          VARCHAR2(255),
  MESSAGE_STATUS      VARCHAR2(255),
  MESSAGE_TYPE        VARCHAR2(255),
  MPC                 VARCHAR2(255),
  MSH_ROLE            VARCHAR2(255),
  NEXT_ATTEMPT        TIMESTAMP,
  NOTIFICATION_STATUS VARCHAR2(255),
  RECEIVED            TIMESTAMP,
  RESTORED            TIMESTAMP,
  DOWNLOADED          TIMESTAMP,
  FAILED              TIMESTAMP,
  SEND_ATTEMPTS       INTEGER,
  SEND_ATTEMPTS_MAX   INTEGER,
  BACKEND             VARCHAR2(255),
  ENDPOINT            VARCHAR2(255),
  CREATED_BY          VARCHAR2(255),
  MESSAGE_SUBTYPE     VARCHAR2(255),
  CONSTRAINT PK_TB_MESSAGE_LOG PRIMARY KEY (ID_PK)
);

CREATE TABLE TB_MESSAGE_PROPERTY (
  ID_PK              INTEGER NOT NULL,
  DATATYPE           VARCHAR2(255),
  KEY_               VARCHAR2(255),
  NAME               VARCHAR2(255),
  REQUIRED_          NUMBER(1),
  FK_BUSINESSPROCESS INTEGER,
  CONSTRAINT PK_TB_MESSAGE_PROPERTY PRIMARY KEY (ID_PK)
);

CREATE TABLE TB_MESSAGE_PROPERTY_SET (
  ID_PK              INTEGER NOT NULL,
  NAME               VARCHAR2(255),
  FK_BUSINESSPROCESS INTEGER,
  CONSTRAINT PK_TB_MESSAGE_PROPERTY_SET PRIMARY KEY (ID_PK)
);

CREATE TABLE TB_MESSAGING (
  ID_PK             INTEGER NOT NULL,
  ID                VARCHAR2(255),
  SIGNAL_MESSAGE_ID INTEGER,
  USER_MESSAGE_ID   INTEGER,
  CONSTRAINT PK_TB_MESSAGING PRIMARY KEY (ID_PK)
);

CREATE TABLE TB_MESSAGING_LOCK (
  ID_PK             INTEGER NOT NULL,
  MESSAGE_TYPE      VARCHAR2(10),
  MESSAGE_RECEIVED  TIMESTAMP,
  MESSAGE_STATE     VARCHAR2(10),
  MESSAGE_ID        VARCHAR2(255),
  INITIATOR         VARCHAR2(255),
  MPC               VARCHAR2(255),
  SEND_ATTEMPTS     INTEGER,
  SEND_ATTEMPTS_MAX INTEGER,
  NEXT_ATTEMPT      TIMESTAMP,
  MESSAGE_STALED    TIMESTAMP,
  CONSTRAINT PK_TB_MESSAGING_LOCK PRIMARY KEY (ID_PK)
);

CREATE TABLE TB_MPC (
  ID_PK                  INTEGER NOT NULL,
  DEFAULT_MPC            NUMBER(1),
  IS_ENABLED             NUMBER(1),
  name                   VARCHAR2(255),
  QUALIFIED_NAME         VARCHAR2(255),
  RETENTION_DOWNLOADED   INTEGER,
  RETENTION_UNDOWNLOADED INTEGER,
  FK_CONFIGURATION       INTEGER,
  CONSTRAINT PK_TB_MPC PRIMARY KEY (ID_PK)
);

CREATE TABLE TB_PART_INFO (
  ID_PK             INTEGER           NOT NULL,
  BINARY_DATA       BLOB,
  DESCRIPTION_LANG  VARCHAR2(255),
  DESCRIPTION_VALUE VARCHAR2(255),
  HREF              VARCHAR2(255),
  IN_BODY           NUMBER(1),
  SCHEMA_LOCATION   VARCHAR2(255),
  SCHEMA_NAMESPACE  VARCHAR2(255),
  SCHEMA_VERSION    VARCHAR2(255),
  PAYLOADINFO_ID    INTEGER,
  FILENAME          VARCHAR2(255),
  MIME              VARCHAR2(255)     NOT NULL,
  PART_ORDER        INTEGER DEFAULT 0 NOT NULL,
  CONSTRAINT PK_TB_PART_INFO PRIMARY KEY (ID_PK)
);

CREATE TABLE TB_PARTY (
  ID_PK              INTEGER NOT NULL,
  ENDPOINT           VARCHAR2(255),
  NAME               VARCHAR2(255),
  "PASSWORD"         VARCHAR2(255),
  USERNAME           VARCHAR2(255),
  FK_BUSINESSPROCESS INTEGER,
  CONSTRAINT PK_TB_PARTY PRIMARY KEY (ID_PK)
);

CREATE TABLE TB_PARTY_AUD (
  ID_PK        INTEGER NOT NULL,
  REV          INTEGER NOT NULL,
  REVTYPE      NUMBER(3),
  ENDPOINT     VARCHAR2(255),
  ENDPOINT_MOD NUMBER(1),
  NAME         VARCHAR2(255),
  NAME_MOD     NUMBER(1),
  "PASSWORD"   VARCHAR2(255),
  PASSWORD_MOD NUMBER(1),
  USERNAME     VARCHAR2(255),
  USERNAME_MOD NUMBER(1)
);

CREATE TABLE TB_PARTY_ID (
  ID_PK   INTEGER NOT NULL,
  TYPE    VARCHAR2(255),
  VALUE   VARCHAR2(255),
  TO_ID   INTEGER,
  FROM_ID INTEGER,
  CONSTRAINT PK_TB_PARTY_ID PRIMARY KEY (ID_PK)
);

CREATE TABLE TB_PARTY_ID_TYPE (
  ID_PK              INTEGER NOT NULL,
  NAME               VARCHAR2(255),
  VALUE              VARCHAR2(255),
  FK_BUSINESSPROCESS INTEGER,
  CONSTRAINT PK_TB_PARTY_ID_TYPE PRIMARY KEY (ID_PK)
);

CREATE TABLE TB_PARTY_ID_TYPE_AUD (
  ID_PK     INTEGER NOT NULL,
  REV       INTEGER NOT NULL,
  REVTYPE   NUMBER(3),
  NAME      VARCHAR2(255),
  NAME_MOD  NUMBER(1),
  VALUE     VARCHAR2(255),
  VALUE_MOD NUMBER(1)
);

CREATE TABLE TB_PARTY_IDENTIFIER (
  ID_PK            INTEGER NOT NULL,
  PARTY_ID         VARCHAR2(255),
  FK_PARTY_ID_TYPE INTEGER,
  FK_PARTY         INTEGER,
  CONSTRAINT PK_TB_PARTY_IDENTIFIER PRIMARY KEY (ID_PK)
);

CREATE TABLE TB_PARTY_IDENTIFIER_AUD (
  ID_PK    INTEGER NOT NULL,
  REV      INTEGER NOT NULL,
  REVTYPE  NUMBER(3),
  FK_PARTY INTEGER
);

CREATE TABLE TB_PAYLOAD (
  ID_PK              INTEGER NOT NULL,
  CID                VARCHAR2(255),
  IN_BODY            NUMBER(1),
  MAX_SIZE           INTEGER,
  MIME_TYPE          VARCHAR2(255),
  NAME               VARCHAR2(255),
  REQUIRED_          NUMBER(1),
  SCHEMA_FILE        VARCHAR2(255),
  FK_BUSINESSPROCESS INTEGER,
  CONSTRAINT PK_TB_PAYLOAD PRIMARY KEY (ID_PK)
);

CREATE TABLE TB_PAYLOAD_PROFILE (
  ID_PK              INTEGER NOT NULL,
  MAX_SIZE           INTEGER,
  NAME               VARCHAR2(255),
  FK_BUSINESSPROCESS INTEGER,
  CONSTRAINT PK_TB_PAYLOAD_PROFILE PRIMARY KEY (ID_PK)
);

CREATE TABLE TB_PROCESS (
  ID_PK                 INTEGER   NOT NULL,
  NAME                  VARCHAR2(255),
  FK_AGREEMENT          INTEGER,
  FK_INITIATOR_ROLE     INTEGER,
  FK_MEP                INTEGER,
  FK_MEP_BINDING        INTEGER,
  FK_RESPONDER_ROLE     INTEGER,
  FK_BUSINESSPROCESS    INTEGER,
  USE_DYNAMIC_INITIATOR NUMBER(1) NOT NULL,
  USE_DYNAMIC_RESPONDER NUMBER(1) NOT NULL,
  CONSTRAINT PK_TB_PROCESS PRIMARY KEY (ID_PK)
);

CREATE TABLE TB_PROPERTY (
  ID_PK                INTEGER       NOT NULL,
  NAME                 VARCHAR2(255) NOT NULL,
  VALUE                VARCHAR2(255),
  MESSAGEPROPERTIES_ID INTEGER,
  PARTPROPERTIES_ID    INTEGER,
  TYPE                 VARCHAR2(255),
  CONSTRAINT PK_TB_PROPERTY PRIMARY KEY (ID_PK)
);

CREATE TABLE TB_RAWENVELOPE_LOG (
  ID_PK               INTEGER NOT NULL,
  USERMESSAGE_ID_FK   INTEGER,
  SIGNALMESSAGE_ID_FK INTEGER,
  RAW_XML             CLOB,
  MESSAGE_ID          VARCHAR2(255),
  CONSTRAINT PK_TB_RAWENVELOPE_LOG PRIMARY KEY (ID_PK)
);

CREATE TABLE TB_RECEIPT (
  ID_PK INTEGER NOT NULL,
  CONSTRAINT PK_TB_RECEIPT PRIMARY KEY (ID_PK)
);

CREATE TABLE TB_RECEIPT_DATA (
  RECEIPT_ID INTEGER NOT NULL,
  RAW_XML    CLOB
);

CREATE TABLE TB_RECEPTION_AWARENESS (
  ID_PK               INTEGER NOT NULL,
  DUPLICATE_DETECTION NUMBER(1),
  NAME                VARCHAR2(255),
  RETRY_COUNT         INTEGER,
  RETRY_TIMEOUT       INTEGER,
  STRATEGY            VARCHAR2(255),
  FK_BUSINESSPROCESS  INTEGER,
  CONSTRAINT PK_TB_RECEPTION_AWARENESS PRIMARY KEY (ID_PK)
);

CREATE TABLE TB_RELIABILITY (
  ID_PK              INTEGER NOT NULL,
  NAME               VARCHAR2(255),
  NON_REPUDIATION    NUMBER(1),
  REPLY_PATTERN      VARCHAR2(255),
  FK_BUSINESSPROCESS INTEGER,
  CONSTRAINT PK_TB_RELIABILITY PRIMARY KEY (ID_PK)
);

CREATE TABLE TB_REV_CHANGES (
  ID_PK             INTEGER NOT NULL,
  REV               INTEGER,
  AUDIT_ORDER       INTEGER,
  ENTIY_NAME        VARCHAR2(255),
  GROUP_NAME        VARCHAR2(255),
  ENTITY_ID         VARCHAR2(255),
  MODIFICATION_TYPE VARCHAR2(255),
  CONSTRAINT PK_TB_REV_CHANGES PRIMARY KEY (ID_PK)
);

CREATE TABLE TB_REV_INFO (
  ID            INTEGER NOT NULL,
  TIMESTAMP     NUMBER(38, 0),
  REVISION_DATE TIMESTAMP,
  USER_NAME     VARCHAR2(255),
  CONSTRAINT PK_TB_REV_INFO PRIMARY KEY (ID)
);

CREATE TABLE TB_ROLE (
  ID_PK              INTEGER NOT NULL,
  NAME               VARCHAR2(255),
  VALUE              VARCHAR2(255),
  FK_BUSINESSPROCESS INTEGER,
  CONSTRAINT PK_TB_ROLE PRIMARY KEY (ID_PK)
);

CREATE TABLE TB_ROUTING_CRITERIA (
  ID_PK             INTEGER NOT NULL,
  EXPRESSION        VARCHAR2(255),
  NAME              VARCHAR2(255),
  FK_BACKEND_FILTER INTEGER,
  PRIORITY          INTEGER,
  CONSTRAINT PK_TB_ROUTING_CRITERIA PRIMARY KEY (ID_PK)
);

CREATE TABLE TB_ROUTING_CRITERIA_AUD (
  ID_PK          INTEGER NOT NULL,
  REV            INTEGER NOT NULL,
  REVTYPE        NUMBER(3),
  EXPRESSION     VARCHAR2(255),
  EXPRESSION_MOD NUMBER(1),
  NAME           VARCHAR2(255),
  NAME_MOD       NUMBER(1)
);

CREATE TABLE TB_SECURITY (
  ID_PK              INTEGER NOT NULL,
  NAME               VARCHAR2(255),
  POLICY             VARCHAR2(255),
  SIGNATURE_METHOD   VARCHAR2(255),
  FK_BUSINESSPROCESS INTEGER,
  CONSTRAINT PK_TB_SECURITY PRIMARY KEY (ID_PK)
);

CREATE TABLE TB_SEND_ATTEMPT (
  ID_PK      INTEGER       NOT NULL,
  MESSAGE_ID VARCHAR2(255) NOT NULL,
  START_DATE TIMESTAMP     NOT NULL,
  END_DATE   TIMESTAMP     NOT NULL,
  STATUS     VARCHAR2(255) NOT NULL,
  ERROR      VARCHAR2(255),
  CONSTRAINT PK_TB_SEND_ATTEMPT PRIMARY KEY (ID_PK)
);

CREATE TABLE TB_SERVICE (
  ID_PK              INTEGER NOT NULL,
  NAME               VARCHAR2(255),
  SERVICE_TYPE       VARCHAR2(255),
  VALUE              VARCHAR2(255),
  FK_BUSINESSPROCESS INTEGER,
  CONSTRAINT PK_TB_SERVICE PRIMARY KEY (ID_PK)
);

CREATE TABLE TB_SIGNAL_MESSAGE (
  ID_PK             INTEGER NOT NULL,
  PULL_REQUEST_MPC  VARCHAR2(255),
  messageInfo_ID_PK INTEGER,
  receipt_ID_PK     INTEGER,
  CONSTRAINT PK_TB_SIGNAL_MESSAGE PRIMARY KEY (ID_PK)
);

CREATE TABLE TB_USER (
  ID_PK           NUMBER(38, 0)       NOT NULL,
  USER_EMAIL      VARCHAR2(255),
  USER_ENABLED    NUMBER(1)           NOT NULL,
  USER_PASSWORD   VARCHAR2(255)       NOT NULL,
  USER_NAME       VARCHAR2(255)       NOT NULL,
  OPTLOCK         INTEGER,
  ATTEMPT_COUNT   INTEGER DEFAULT 0,
  SUSPENSION_DATE TIMESTAMP,
  USER_DELETED    NUMBER(1) DEFAULT 0 NOT NULL,
  CONSTRAINT PK_TB_USER PRIMARY KEY (ID_PK)
);

CREATE TABLE TB_USER_AUD (
  ID_PK         INTEGER NOT NULL,
  REV           INTEGER NOT NULL,
  REVTYPE       NUMBER(3),
  USER_ENABLED  NUMBER(1),
  ACTIVE_MOD    NUMBER(1),
  USER_DELETED  NUMBER(1),
  DELETED_MOD   NUMBER(1),
  USER_EMAIL    VARCHAR2(255),
  EMAIL_MOD     NUMBER(1),
  USER_PASSWORD VARCHAR2(255),
  PASSWORD_MOD  NUMBER(1),
  USER_NAME     VARCHAR2(255),
  USERNAME_MOD  NUMBER(1),
  OPTLOCK       INTEGER,
  VERSION_MOD   NUMBER(1),
  ROLES_MOD     NUMBER(1)
);

CREATE TABLE TB_USER_MESSAGE (
  ID_PK                     INTEGER       NOT NULL,
  COLLABORATION_INFO_ACTION VARCHAR2(255),
  AGREEMENT_REF_PMODE       VARCHAR2(255),
  AGREEMENT_REF_TYPE        VARCHAR2(255),
  AGREEMENT_REF_VALUE       VARCHAR2(255),
  COLL_INFO_CONVERS_ID      VARCHAR2(255) NOT NULL,
  SERVICE_TYPE              VARCHAR2(255),
  SERVICE_VALUE             VARCHAR2(255),
  MPC                       VARCHAR2(255),
  FROM_ROLE                 VARCHAR2(255),
  TO_ROLE                   VARCHAR2(255),
  messageInfo_ID_PK         INTEGER,
  CONSTRAINT PK_TB_USER_MESSAGE PRIMARY KEY (ID_PK)
);

CREATE TABLE TB_USER_ROLE (
  ID_PK     NUMBER(38, 0) NOT NULL,
  ROLE_NAME VARCHAR2(255) NOT NULL,
  CONSTRAINT PK_TB_USER_ROLE PRIMARY KEY (ID_PK)
);

CREATE TABLE TB_USER_ROLE_AUD (
  ID_PK     INTEGER NOT NULL,
  REV       INTEGER NOT NULL,
  REVTYPE   NUMBER(3),
  ROLE_NAME VARCHAR2(255),
  NAME_MOD  NUMBER(1),
  USERS_MOD NUMBER(1)
);

CREATE TABLE TB_USER_ROLES (
  USER_ID NUMBER(38, 0) NOT NULL,
  ROLE_ID NUMBER(38, 0) NOT NULL
);

CREATE TABLE TB_USER_ROLES_AUD (
  REV     INTEGER,
  REVTYPE NUMBER(3),
  USER_ID INTEGER,
  ROLE_ID INTEGER
);

ALTER TABLE TB_BACK_RCRITERIA_AUD
  ADD CONSTRAINT PK_BACK_RCRITERIA_AUD PRIMARY KEY (ID_PK, REV);

ALTER TABLE TB_BACKEND_FILTER_AUD
  ADD CONSTRAINT PK_BACKEND_FILTER_AUD PRIMARY KEY (ID_PK, REV);

ALTER TABLE TB_CONFIGURATION_AUD
  ADD CONSTRAINT PK_CONFIGURATION_AUD PRIMARY KEY (ID_PK, REV);

ALTER TABLE TB_CONFIGURATION_RAW_AUD
  ADD CONSTRAINT PK_CONFIGURATION_RAW_AUD PRIMARY KEY (ID_PK, REV);

ALTER TABLE TB_LEG_TB_MPC
  ADD CONSTRAINT PRIMARY_12 PRIMARY KEY (LegConfiguration_ID_PK, partyMpcMap_KEY);

ALTER TABLE TB_PARTY_AUD
  ADD CONSTRAINT PK_PARTY_AUD PRIMARY KEY (ID_PK, REV);

ALTER TABLE TB_PARTY_ID_TYPE_AUD
  ADD CONSTRAINT PK_PARTY_ID_TYPE_AUD PRIMARY KEY (ID_PK, REV);

ALTER TABLE TB_PARTY_IDENTIFIER_AUD
  ADD CONSTRAINT PK_PARTY_IDENTIFIER_AUD PRIMARY KEY (ID_PK, REV);

ALTER TABLE TB_ROUTING_CRITERIA_AUD
  ADD CONSTRAINT PK_ROUTING_CRITERIA_AUD PRIMARY KEY (ID_PK, REV);

ALTER TABLE TB_USER_AUD
  ADD CONSTRAINT PK_USER_AUD PRIMARY KEY (ID_PK, REV);

ALTER TABLE TB_USER_ROLE_AUD
  ADD CONSTRAINT PK_USER_ROLE_AUD PRIMARY KEY (ID_PK, REV);

ALTER TABLE TB_USER_ROLES
  ADD CONSTRAINT PK_PRIMARY PRIMARY KEY (USER_ID, ROLE_ID);

ALTER TABLE TB_CERTIFICATE
  ADD CONSTRAINT CERTIFICATE_ALIAS UNIQUE (CERTIFICATE_ALIAS, CERTIFICATE_TYPE);

ALTER TABLE TB_MESSAGING_LOCK
  ADD CONSTRAINT IDX_MESSAGE_LOCK_UNIQUE_ID UNIQUE (MESSAGE_ID);

ALTER TABLE TB_LEG_TB_MPC
  ADD CONSTRAINT UK_7h5nw411791gf4lg1yh6si1wd UNIQUE (partyMpcMap_ID_PK);

ALTER TABLE TB_MESSAGE_INFO
  ADD CONSTRAINT UK_ecrraoe83o1uqq0dn9424x7ln UNIQUE (MESSAGE_ID);

ALTER TABLE TB_USER_ROLE
  ADD CONSTRAINT UQ_ROLE_NAME UNIQUE (ROLE_NAME);

ALTER TABLE TB_USER
  ADD CONSTRAINT USER_NAME UNIQUE (USER_NAME);

CREATE INDEX FK_13k2eptp1ejp5othy1njrg3p8
  ON TB_LEG (FK_RELIABILITY);

CREATE INDEX FK_277j83lgsq3nmwyhsw637ynd8
  ON TB_MEP_BINDING (FK_BUSINESSPROCESS);

CREATE INDEX FK_2h31p0a2y6weg2grh70c9cyva
  ON TB_PROPERTY (MESSAGEPROPERTIES_ID);

CREATE INDEX FK_2sw6knalor7rpr04ye0o2r9ap
  ON TB_ROLE (FK_BUSINESSPROCESS);

CREATE INDEX FK_3emt6xaglh7676lpckiy6r1vb
  ON TB_PROCESS (FK_RESPONDER_ROLE);

CREATE INDEX FK_3sgaxwfr5koe3oldbbd62siwq
  ON TB_RECEPTION_AWARENESS (FK_BUSINESSPROCESS);

CREATE INDEX FK_433rgm5a446t59q6jkb885l3x
  ON TB_MESSAGING (USER_MESSAGE_ID);

CREATE INDEX FK_53gp9smtemqcuio8o9t10narm
  ON TB_MESSAGING (SIGNAL_MESSAGE_ID);

CREATE INDEX FK_62dt1y6o7od1t0iqn7dow8uq5
  ON TB_CONFIGURATION (FK_BUSINESSPROCESSES);

CREATE INDEX FK_6hldnnqkmh6lui555t4n9fjiv
  ON TB_ACTION (FK_BUSINESSPROCESS);

CREATE INDEX FK_70m9kqpqab3rgk90wsuv9vn64
  ON TB_AGREEMENT (FK_BUSINESSPROCESS);

CREATE INDEX FK_7p1g7sqvli1sj6k7vphjo9irc
  ON TB_PROCESS (FK_BUSINESSPROCESS);

CREATE INDEX FK_8nccae214mvs1kh5sgcj3y5oy
  ON TB_RECEIPT_DATA (RECEIPT_ID);

CREATE INDEX FK_8q319stwm1noijpb3jfl8jri8
  ON TB_MPC (FK_CONFIGURATION);

CREATE INDEX FK_9hpmoewlitivcl8rw1joccuau
  ON TB_LEG (FK_SECURITY);

CREATE INDEX FK_BACKEND_FILTER_AUD_REV
  ON TB_BACKEND_FILTER_AUD (REV);

CREATE INDEX FK_BACK_RCRITERIA_AUD
  ON TB_BACK_RCRITERIA_AUD (REV);

CREATE INDEX FK_CONFIGURATION_AUD_REV
  ON TB_CONFIGURATION_AUD (REV);

CREATE INDEX FK_CONFIGURATION_RAW_AUD
  ON TB_CONFIGURATION_RAW_AUD (REV);

CREATE INDEX FK_MSG_ACK_PROP_MSG_ACK
  ON TB_MESSAGE_ACKNW_PROP (FK_MSG_ACKNOWLEDGE);

CREATE INDEX FK_PARTY_AUD_REV
  ON TB_PARTY_AUD (REV);

CREATE INDEX FK_PARTY_IDENTIFIER_AUD_REV
  ON TB_PARTY_IDENTIFIER_AUD (REV);

CREATE INDEX FK_PARTY_ID_TYPE_AUD_REV
  ON TB_PARTY_ID_TYPE_AUD (REV);

CREATE INDEX FK_REV_CHANGES_REV
  ON TB_REV_CHANGES (REV);

CREATE INDEX FK_ROUTING_CRITERIA_AUD_REV
  ON TB_ROUTING_CRITERIA_AUD (REV);

CREATE INDEX FK_USER_AUD_REV
  ON TB_USER_AUD (REV);

CREATE INDEX FK_USER_ROLE_AUD
  ON TB_USER_ROLE_AUD (REV);

CREATE INDEX FK_advgudix024irqpuge4dl9iqf
  ON TB_PARTY_ID_TYPE (FK_BUSINESSPROCESS);

CREATE INDEX FK_am7bwsm92se3nvclbeiep5vwg
  ON TB_LEG (FK_PAYLOAD_PROFILE);

CREATE INDEX FK_asjdl57budmuwmj3611969jpp
  ON TB_JOIN_PROCESS_INIT_PARTY (PARTY_FK);

CREATE INDEX FK_be4xc1069qyw2klhvm3xmg26s
  ON TB_USER_MESSAGE (messageInfo_ID_PK);

CREATE INDEX FK_c08ljjwi4p9dx1rjtcdbe1sfu
  ON TB_SIGNAL_MESSAGE (messageInfo_ID_PK);

CREATE INDEX FK_cloyy9k391vhsup85iwr8ixiv
  ON TB_PARTY (FK_BUSINESSPROCESS);

CREATE INDEX FK_cwylvg6ernwba61mo3yagmkg8
  ON TB_PROPERTY (PARTPROPERTIES_ID);

CREATE INDEX FK_d9el0l8u1gm5oeu67nqrkherq
  ON TB_PAYLOAD (FK_BUSINESSPROCESS);

CREATE INDEX FK_desr6xtdp1lp41d5venlhf4bc
  ON TB_PARTY_IDENTIFIER (FK_PARTY);

CREATE INDEX FK_dgtgtg41yrfebyysmkyi1gcaa
  ON TB_LEG (FK_ACTION);

CREATE INDEX FK_e7ehghifrns83w6v3tps7vpii
  ON TB_PARTY_IDENTIFIER (FK_PARTY_ID_TYPE);

CREATE INDEX FK_eiy3f9ahx0kdx4wxoi6prytn9
  ON TB_MESSAGE_PROPERTY_SET (FK_BUSINESSPROCESS);

CREATE INDEX FK_ekk8pn89y50g22kd3gpja7j39
  ON TB_JOIN_PROPERTY_SET (PROPERTY_FK);

CREATE INDEX FK_epmxkh8u7jnw5pbyj47sirmlh
  ON TB_MEP (FK_BUSINESSPROCESS);

CREATE INDEX FK_fkftd5orw2etiu4ghmn3mhx9i
  ON TB_PARTY_ID (FROM_ID);

CREATE INDEX FK_fpxbdc63gifacrd4qb6afrqyw
  ON TB_JOIN_PROCESS_LEG (PROCESS_FK);

CREATE INDEX FK_fwrq81cctu2nh0qeprmpvker9
  ON TB_SECURITY (FK_BUSINESSPROCESS);

CREATE INDEX FK_g20eow5f2cke3avsrg6qpkuxv
  ON TB_JOIN_PAYLOAD_PROFILE (FK_PROFILE);

CREATE INDEX FK_gh98q07kcjl7wdaon9ggifqux
  ON TB_JOIN_PROCESS_LEG (LEG_FK);

CREATE INDEX FK_hlb2y2prpm52ssynn22h3swsr
  ON TB_JOIN_PROCESS_RESP_PARTY (PROCESS_FK);

CREATE INDEX FK_i7gei6bdr2cdn61hdoplxbu7p
  ON TB_ROUTING_CRITERIA (FK_BACKEND_FILTER);

CREATE INDEX FK_j0y3fcediqx5but8jbscy59kw
  ON TB_LEG (FK_ERROR_HANDLING);

CREATE INDEX FK_j7lab5n5suklcldqhxn8jl2jo
  ON TB_PROCESS (FK_MEP);

CREATE INDEX FK_kjanlcdeap7nirdigr7rt7p4v
  ON TB_PROCESS (FK_AGREEMENT);

CREATE INDEX FK_kkhxs36rw15aygpn00nvvgyxg
  ON TB_SERVICE (FK_BUSINESSPROCESS);

CREATE INDEX FK_kv2c5k41apdlvc6i18ar57abe
  ON TB_LEG (FK_SERVICE);

CREATE INDEX FK_kyn19swm143m96in317sr97h2
  ON TB_JOIN_PROCESS_RESP_PARTY (PARTY_FK);

CREATE INDEX FK_l1mmhs1tbt8pw7vx5teuytjvj
  ON TB_ERROR_HANDLING (FK_BUSINESSPROCESS);

CREATE INDEX FK_le4rxnki51eak6xetc7fq8sri
  ON TB_LEG (FK_PROPERTY_SET);

CREATE INDEX FK_lnnplhiawxx7wlt43ye3pej00
  ON TB_RELIABILITY (FK_BUSINESSPROCESS);

CREATE INDEX FK_lynom7rxkc0t1xfl0nowxpeuj
  ON TB_PAYLOAD_PROFILE (FK_BUSINESSPROCESS);

CREATE INDEX FK_m6uu2y6g9buet3o3k1n4qxwec
  ON TB_SIGNAL_MESSAGE (receipt_ID_PK);

CREATE INDEX FK_mk54xe43f3hokh7fjl3w66efk
  ON TB_JOIN_PROPERTY_SET (SET_FK);

CREATE INDEX FK_orddltv2g3lq79eu48c2mc2fy
  ON TB_LEG_TB_MPC (partyMpcMap_KEY);

CREATE INDEX FK_ot8jfkotd6qu7jrdaptrohbn8
  ON TB_JOIN_PROCESS_INIT_PARTY (PROCESS_FK);

CREATE INDEX FK_ppvxyurcvfy71fvejw9bosghw
  ON TB_LEG (FK_MPC);

CREATE INDEX FK_prrcmi4grm4txhfsfnfhgq1k1
  ON TB_ERROR (SIGNALMESSAGE_ID);

CREATE INDEX FK_q0l3ej6ruqcfutru2securq9l
  ON TB_JOIN_PAYLOAD_PROFILE (FK_PAYLOAD);

CREATE INDEX FK_q1jfsxfoj3nl7hii3co7bu0fr
  ON TB_PROCESS (FK_INITIATOR_ROLE);

CREATE INDEX FK_q3gapfc1e7hfbgmo0nebj4k1n
  ON TB_CONFIGURATION (FK_PARTY);

CREATE INDEX FK_r2swpqof7636vveqt0dxl89dp
  ON TB_LEG (FK_BUSINESSPROCESS);

CREATE INDEX FK_rj8h1b65vnjjgyfcjnvswkguh
  ON TB_MESSAGE_PROPERTY (FK_BUSINESSPROCESS);

CREATE INDEX FK_rlbjstvo4gpdcp6ysv9mofqxj
  ON TB_LEG (FK_RECEPTION_AWARENESS);

CREATE INDEX FK_signalmsg_id_fk_rawenv_id
  ON TB_RAWENVELOPE_LOG (SIGNALMESSAGE_ID_FK);

CREATE INDEX FK_tp11d8fg7cv1fwf5xkvwqpp34
  ON TB_PROCESS (FK_MEP_BINDING);

CREATE INDEX FK_tq6lbn3mp0vsfc6qqu7wxy54g
  ON TB_PART_INFO (PAYLOADINFO_ID);

CREATE INDEX FK_usermsg_id_fk_rawenv_id
  ON TB_RAWENVELOPE_LOG (USERMESSAGE_ID_FK);

CREATE INDEX FK_ylub8lptgvsch02mj71euuil
  ON TB_PARTY_ID (TO_ID);

CREATE INDEX IDX_MESSAGE_INFO_R_T_M_ID
  ON TB_MESSAGE_INFO (REF_TO_MESSAGE_ID);

CREATE INDEX IDX_MESSAGE_LOCK_SEARCH
  ON TB_MESSAGING_LOCK (MESSAGE_TYPE, MESSAGE_STATE, INITIATOR, MPC, NEXT_ATTEMPT);

CREATE INDEX IDX_MESSAGE_LOG_M_STATUS
  ON TB_MESSAGE_LOG (MESSAGE_STATUS);

CREATE INDEX IDX_MESSAGE_LOG_RECEIVED
  ON TB_MESSAGE_LOG (RECEIVED);

CREATE INDEX IDX_PARTY_ID_VALUE
  ON TB_PARTY_ID (VALUE);

CREATE INDEX IDX_PROPERTY_NAME
  ON TB_PROPERTY (NAME);

CREATE INDEX IDX_RAWENVELOPE_MESSAGE_ID
  ON TB_RAWENVELOPE_LOG (MESSAGE_ID);

CREATE INDEX IDX_ROLE_ID
  ON TB_USER_ROLES (ROLE_ID);

CREATE INDEX IDX_TB_ML_MSG_ID
  ON TB_MESSAGE_LOG (MESSAGE_ID);

CREATE INDEX IDX_USER_ID
  ON TB_USER_ROLES (USER_ID);

CREATE INDEX UK_bpeflt902ybu9nshba2fjpv9d
  ON TB_MESSAGE_LOG (MSH_ROLE);

ALTER TABLE TB_LEG
  ADD CONSTRAINT FK_13k2eptp1ejp5othy1njrg3p8 FOREIGN KEY (FK_RELIABILITY) REFERENCES TB_RELIABILITY (ID_PK);

ALTER TABLE TB_MEP_BINDING
  ADD CONSTRAINT FK_277j83lgsq3nmwyhsw637ynd8 FOREIGN KEY (FK_BUSINESSPROCESS) REFERENCES TB_BUSINESS_PROCESS (ID_PK);

ALTER TABLE TB_PROPERTY
  ADD CONSTRAINT FK_2h31p0a2y6weg2grh70c9cyva FOREIGN KEY (MESSAGEPROPERTIES_ID) REFERENCES TB_USER_MESSAGE (ID_PK);

ALTER TABLE TB_ROLE
  ADD CONSTRAINT FK_2sw6knalor7rpr04ye0o2r9ap FOREIGN KEY (FK_BUSINESSPROCESS) REFERENCES TB_BUSINESS_PROCESS (ID_PK);

ALTER TABLE TB_PROCESS
  ADD CONSTRAINT FK_3emt6xaglh7676lpckiy6r1vb FOREIGN KEY (FK_RESPONDER_ROLE) REFERENCES TB_ROLE (ID_PK);

ALTER TABLE TB_RECEPTION_AWARENESS
  ADD CONSTRAINT FK_3sgaxwfr5koe3oldbbd62siwq FOREIGN KEY (FK_BUSINESSPROCESS) REFERENCES TB_BUSINESS_PROCESS (ID_PK);

ALTER TABLE TB_MESSAGING
  ADD CONSTRAINT FK_433rgm5a446t59q6jkb885l3x FOREIGN KEY (USER_MESSAGE_ID) REFERENCES TB_USER_MESSAGE (ID_PK);

ALTER TABLE TB_MESSAGING
  ADD CONSTRAINT FK_53gp9smtemqcuio8o9t10narm FOREIGN KEY (SIGNAL_MESSAGE_ID) REFERENCES TB_SIGNAL_MESSAGE (ID_PK);

ALTER TABLE TB_CONFIGURATION
  ADD CONSTRAINT FK_62dt1y6o7od1t0iqn7dow8uq5 FOREIGN KEY (FK_BUSINESSPROCESSES) REFERENCES TB_BUSINESS_PROCESS (ID_PK);

ALTER TABLE TB_ACTION
  ADD CONSTRAINT FK_6hldnnqkmh6lui555t4n9fjiv FOREIGN KEY (FK_BUSINESSPROCESS) REFERENCES TB_BUSINESS_PROCESS (ID_PK);

ALTER TABLE TB_AGREEMENT
  ADD CONSTRAINT FK_70m9kqpqab3rgk90wsuv9vn64 FOREIGN KEY (FK_BUSINESSPROCESS) REFERENCES TB_BUSINESS_PROCESS (ID_PK);

ALTER TABLE TB_LEG_TB_MPC
  ADD CONSTRAINT FK_7h5nw411791gf4lg1yh6si1wd FOREIGN KEY (partyMpcMap_ID_PK) REFERENCES TB_MPC (ID_PK);

ALTER TABLE TB_PROCESS
  ADD CONSTRAINT FK_7p1g7sqvli1sj6k7vphjo9irc FOREIGN KEY (FK_BUSINESSPROCESS) REFERENCES TB_BUSINESS_PROCESS (ID_PK);

ALTER TABLE TB_RECEIPT_DATA
  ADD CONSTRAINT FK_8nccae214mvs1kh5sgcj3y5oy FOREIGN KEY (RECEIPT_ID) REFERENCES TB_RECEIPT (ID_PK);

ALTER TABLE TB_MPC
  ADD CONSTRAINT FK_8q319stwm1noijpb3jfl8jri8 FOREIGN KEY (FK_CONFIGURATION) REFERENCES TB_CONFIGURATION (ID_PK);

ALTER TABLE TB_LEG
  ADD CONSTRAINT FK_9hpmoewlitivcl8rw1joccuau FOREIGN KEY (FK_SECURITY) REFERENCES TB_SECURITY (ID_PK);

ALTER TABLE TB_BACKEND_FILTER_AUD
  ADD CONSTRAINT FK_BACKEND_FILTER_AUD_REV FOREIGN KEY (REV) REFERENCES TB_REV_INFO (ID);

ALTER TABLE TB_BACK_RCRITERIA_AUD
  ADD CONSTRAINT FK_BACK_RCRITERIA_AUD FOREIGN KEY (REV) REFERENCES TB_REV_INFO (ID);

ALTER TABLE TB_CONFIGURATION_AUD
  ADD CONSTRAINT FK_CONFIGURATION_AUD_REV FOREIGN KEY (REV) REFERENCES TB_REV_INFO (ID);

ALTER TABLE TB_CONFIGURATION_RAW_AUD
  ADD CONSTRAINT FK_CONFIGURATION_RAW_AUD FOREIGN KEY (REV) REFERENCES TB_REV_INFO (ID);

ALTER TABLE TB_MESSAGE_ACKNW_PROP
  ADD CONSTRAINT FK_MSG_ACK_PROP_MSG_ACK FOREIGN KEY (FK_MSG_ACKNOWLEDGE) REFERENCES TB_MESSAGE_ACKNW (ID_PK);

ALTER TABLE TB_PARTY_AUD
  ADD CONSTRAINT FK_PARTY_AUD_REV FOREIGN KEY (REV) REFERENCES TB_REV_INFO (ID);

ALTER TABLE TB_PARTY_IDENTIFIER_AUD
  ADD CONSTRAINT FK_PARTY_IDENTIFIER_AUD_REV FOREIGN KEY (REV) REFERENCES TB_REV_INFO (ID);

ALTER TABLE TB_PARTY_ID_TYPE_AUD
  ADD CONSTRAINT FK_PARTY_ID_TYPE_AUD_REV FOREIGN KEY (REV) REFERENCES TB_REV_INFO (ID);

ALTER TABLE TB_REV_CHANGES
  ADD CONSTRAINT FK_REV_CHANGES_REV FOREIGN KEY (REV) REFERENCES TB_REV_INFO (ID);

ALTER TABLE TB_ROUTING_CRITERIA_AUD
  ADD CONSTRAINT FK_ROUTING_CRITERIA_AUD_REV FOREIGN KEY (REV) REFERENCES TB_REV_INFO (ID);

ALTER TABLE TB_USER_AUD
  ADD CONSTRAINT FK_USER_AUD_REV FOREIGN KEY (REV) REFERENCES TB_REV_INFO (ID);

ALTER TABLE TB_USER_ROLES
  ADD CONSTRAINT FK_USER_ROLES_ROLE FOREIGN KEY (USER_ID) REFERENCES TB_USER (ID_PK);

ALTER TABLE TB_USER_ROLES
  ADD CONSTRAINT FK_USER_ROLES_USER FOREIGN KEY (ROLE_ID) REFERENCES TB_USER_ROLE (ID_PK);

ALTER TABLE TB_USER_ROLE_AUD
  ADD CONSTRAINT FK_USER_ROLE_AUD FOREIGN KEY (REV) REFERENCES TB_REV_INFO (ID);

ALTER TABLE TB_PARTY_ID_TYPE
  ADD CONSTRAINT FK_advgudix024irqpuge4dl9iqf FOREIGN KEY (FK_BUSINESSPROCESS) REFERENCES TB_BUSINESS_PROCESS (ID_PK);

ALTER TABLE TB_LEG
  ADD CONSTRAINT FK_am7bwsm92se3nvclbeiep5vwg FOREIGN KEY (FK_PAYLOAD_PROFILE) REFERENCES TB_PAYLOAD_PROFILE (ID_PK);

ALTER TABLE TB_JOIN_PROCESS_INIT_PARTY
  ADD CONSTRAINT FK_asjdl57budmuwmj3611969jpp FOREIGN KEY (PARTY_FK) REFERENCES TB_PARTY (ID_PK);

ALTER TABLE TB_USER_MESSAGE
  ADD CONSTRAINT FK_be4xc1069qyw2klhvm3xmg26s FOREIGN KEY (messageInfo_ID_PK) REFERENCES TB_MESSAGE_INFO (ID_PK);

ALTER TABLE TB_SIGNAL_MESSAGE
  ADD CONSTRAINT FK_c08ljjwi4p9dx1rjtcdbe1sfu FOREIGN KEY (messageInfo_ID_PK) REFERENCES TB_MESSAGE_INFO (ID_PK);

ALTER TABLE TB_PARTY
  ADD CONSTRAINT FK_cloyy9k391vhsup85iwr8ixiv FOREIGN KEY (FK_BUSINESSPROCESS) REFERENCES TB_BUSINESS_PROCESS (ID_PK);

ALTER TABLE TB_PROPERTY
  ADD CONSTRAINT FK_cwylvg6ernwba61mo3yagmkg8 FOREIGN KEY (PARTPROPERTIES_ID) REFERENCES TB_PART_INFO (ID_PK);

ALTER TABLE TB_PAYLOAD
  ADD CONSTRAINT FK_d9el0l8u1gm5oeu67nqrkherq FOREIGN KEY (FK_BUSINESSPROCESS) REFERENCES TB_BUSINESS_PROCESS (ID_PK);

ALTER TABLE TB_PARTY_IDENTIFIER
  ADD CONSTRAINT FK_desr6xtdp1lp41d5venlhf4bc FOREIGN KEY (FK_PARTY) REFERENCES TB_PARTY (ID_PK);

ALTER TABLE TB_LEG
  ADD CONSTRAINT FK_dgtgtg41yrfebyysmkyi1gcaa FOREIGN KEY (FK_ACTION) REFERENCES TB_ACTION (ID_PK);

ALTER TABLE TB_PARTY_IDENTIFIER
  ADD CONSTRAINT FK_e7ehghifrns83w6v3tps7vpii FOREIGN KEY (FK_PARTY_ID_TYPE) REFERENCES TB_PARTY_ID_TYPE (ID_PK);

ALTER TABLE TB_MESSAGE_PROPERTY_SET
  ADD CONSTRAINT FK_eiy3f9ahx0kdx4wxoi6prytn9 FOREIGN KEY (FK_BUSINESSPROCESS) REFERENCES TB_BUSINESS_PROCESS (ID_PK);

ALTER TABLE TB_JOIN_PROPERTY_SET
  ADD CONSTRAINT FK_ekk8pn89y50g22kd3gpja7j39 FOREIGN KEY (PROPERTY_FK) REFERENCES TB_MESSAGE_PROPERTY_SET (ID_PK);

ALTER TABLE TB_MEP
  ADD CONSTRAINT FK_epmxkh8u7jnw5pbyj47sirmlh FOREIGN KEY (FK_BUSINESSPROCESS) REFERENCES TB_BUSINESS_PROCESS (ID_PK);

ALTER TABLE TB_PARTY_ID
  ADD CONSTRAINT FK_fkftd5orw2etiu4ghmn3mhx9i FOREIGN KEY (FROM_ID) REFERENCES TB_USER_MESSAGE (ID_PK);

ALTER TABLE TB_JOIN_PROCESS_LEG
  ADD CONSTRAINT FK_fpxbdc63gifacrd4qb6afrqyw FOREIGN KEY (PROCESS_FK) REFERENCES TB_PROCESS (ID_PK);

ALTER TABLE TB_SECURITY
  ADD CONSTRAINT FK_fwrq81cctu2nh0qeprmpvker9 FOREIGN KEY (FK_BUSINESSPROCESS) REFERENCES TB_BUSINESS_PROCESS (ID_PK);

ALTER TABLE TB_JOIN_PAYLOAD_PROFILE
  ADD CONSTRAINT FK_g20eow5f2cke3avsrg6qpkuxv FOREIGN KEY (FK_PROFILE) REFERENCES TB_PAYLOAD (ID_PK);

ALTER TABLE TB_JOIN_PROCESS_LEG
  ADD CONSTRAINT FK_gh98q07kcjl7wdaon9ggifqux FOREIGN KEY (LEG_FK) REFERENCES TB_LEG (ID_PK);

ALTER TABLE TB_JOIN_PROCESS_RESP_PARTY
  ADD CONSTRAINT FK_hlb2y2prpm52ssynn22h3swsr FOREIGN KEY (PROCESS_FK) REFERENCES TB_PROCESS (ID_PK);

ALTER TABLE TB_ROUTING_CRITERIA
  ADD CONSTRAINT FK_i7gei6bdr2cdn61hdoplxbu7p FOREIGN KEY (FK_BACKEND_FILTER) REFERENCES TB_BACKEND_FILTER (ID_PK);

ALTER TABLE TB_LEG
  ADD CONSTRAINT FK_j0y3fcediqx5but8jbscy59kw FOREIGN KEY (FK_ERROR_HANDLING) REFERENCES TB_ERROR_HANDLING (ID_PK);

ALTER TABLE TB_PROCESS
  ADD CONSTRAINT FK_j7lab5n5suklcldqhxn8jl2jo FOREIGN KEY (FK_MEP) REFERENCES TB_MEP (ID_PK);

ALTER TABLE TB_PROCESS
  ADD CONSTRAINT FK_kjanlcdeap7nirdigr7rt7p4v FOREIGN KEY (FK_AGREEMENT) REFERENCES TB_AGREEMENT (ID_PK);

ALTER TABLE TB_SERVICE
  ADD CONSTRAINT FK_kkhxs36rw15aygpn00nvvgyxg FOREIGN KEY (FK_BUSINESSPROCESS) REFERENCES TB_BUSINESS_PROCESS (ID_PK);

ALTER TABLE TB_LEG
  ADD CONSTRAINT FK_kv2c5k41apdlvc6i18ar57abe FOREIGN KEY (FK_SERVICE) REFERENCES TB_SERVICE (ID_PK);

ALTER TABLE TB_JOIN_PROCESS_RESP_PARTY
  ADD CONSTRAINT FK_kyn19swm143m96in317sr97h2 FOREIGN KEY (PARTY_FK) REFERENCES TB_PARTY (ID_PK);

ALTER TABLE TB_ERROR_HANDLING
  ADD CONSTRAINT FK_l1mmhs1tbt8pw7vx5teuytjvj FOREIGN KEY (FK_BUSINESSPROCESS) REFERENCES TB_BUSINESS_PROCESS (ID_PK);

ALTER TABLE TB_LEG
  ADD CONSTRAINT FK_le4rxnki51eak6xetc7fq8sri FOREIGN KEY (FK_PROPERTY_SET) REFERENCES TB_MESSAGE_PROPERTY_SET (ID_PK);

ALTER TABLE TB_RELIABILITY
  ADD CONSTRAINT FK_lnnplhiawxx7wlt43ye3pej00 FOREIGN KEY (FK_BUSINESSPROCESS) REFERENCES TB_BUSINESS_PROCESS (ID_PK);

ALTER TABLE TB_PAYLOAD_PROFILE
  ADD CONSTRAINT FK_lynom7rxkc0t1xfl0nowxpeuj FOREIGN KEY (FK_BUSINESSPROCESS) REFERENCES TB_BUSINESS_PROCESS (ID_PK);

ALTER TABLE TB_SIGNAL_MESSAGE
  ADD CONSTRAINT FK_m6uu2y6g9buet3o3k1n4qxwec FOREIGN KEY (receipt_ID_PK) REFERENCES TB_RECEIPT (ID_PK);

ALTER TABLE TB_JOIN_PROPERTY_SET
  ADD CONSTRAINT FK_mk54xe43f3hokh7fjl3w66efk FOREIGN KEY (SET_FK) REFERENCES TB_MESSAGE_PROPERTY (ID_PK);

ALTER TABLE TB_LEG_TB_MPC
  ADD CONSTRAINT FK_nylcxsy1f9cn3tdskh97h8pt1 FOREIGN KEY (LegConfiguration_ID_PK) REFERENCES TB_LEG (ID_PK);

ALTER TABLE TB_LEG_TB_MPC
  ADD CONSTRAINT FK_orddltv2g3lq79eu48c2mc2fy FOREIGN KEY (partyMpcMap_KEY) REFERENCES TB_PARTY (ID_PK);

ALTER TABLE TB_JOIN_PROCESS_INIT_PARTY
  ADD CONSTRAINT FK_ot8jfkotd6qu7jrdaptrohbn8 FOREIGN KEY (PROCESS_FK) REFERENCES TB_PROCESS (ID_PK);

ALTER TABLE TB_LEG
  ADD CONSTRAINT FK_ppvxyurcvfy71fvejw9bosghw FOREIGN KEY (FK_MPC) REFERENCES TB_MPC (ID_PK);

ALTER TABLE TB_ERROR
  ADD CONSTRAINT FK_prrcmi4grm4txhfsfnfhgq1k1 FOREIGN KEY (SIGNALMESSAGE_ID) REFERENCES TB_SIGNAL_MESSAGE (ID_PK);

ALTER TABLE TB_JOIN_PAYLOAD_PROFILE
  ADD CONSTRAINT FK_q0l3ej6ruqcfutru2securq9l FOREIGN KEY (FK_PAYLOAD) REFERENCES TB_PAYLOAD_PROFILE (ID_PK);

ALTER TABLE TB_PROCESS
  ADD CONSTRAINT FK_q1jfsxfoj3nl7hii3co7bu0fr FOREIGN KEY (FK_INITIATOR_ROLE) REFERENCES TB_ROLE (ID_PK);

ALTER TABLE TB_CONFIGURATION
  ADD CONSTRAINT FK_q3gapfc1e7hfbgmo0nebj4k1n FOREIGN KEY (FK_PARTY) REFERENCES TB_PARTY (ID_PK);

ALTER TABLE TB_LEG
  ADD CONSTRAINT FK_r2swpqof7636vveqt0dxl89dp FOREIGN KEY (FK_BUSINESSPROCESS) REFERENCES TB_BUSINESS_PROCESS (ID_PK);

ALTER TABLE TB_MESSAGE_PROPERTY
  ADD CONSTRAINT FK_rj8h1b65vnjjgyfcjnvswkguh FOREIGN KEY (FK_BUSINESSPROCESS) REFERENCES TB_BUSINESS_PROCESS (ID_PK);

ALTER TABLE TB_LEG
  ADD CONSTRAINT FK_rlbjstvo4gpdcp6ysv9mofqxj FOREIGN KEY (FK_RECEPTION_AWARENESS) REFERENCES TB_RECEPTION_AWARENESS (ID_PK);

ALTER TABLE TB_RAWENVELOPE_LOG
  ADD CONSTRAINT FK_signalmsg_id_fk_rawenv_id FOREIGN KEY (SIGNALMESSAGE_ID_FK) REFERENCES TB_SIGNAL_MESSAGE (ID_PK);

ALTER TABLE TB_PROCESS
  ADD CONSTRAINT FK_tp11d8fg7cv1fwf5xkvwqpp34 FOREIGN KEY (FK_MEP_BINDING) REFERENCES TB_MEP_BINDING (ID_PK);

ALTER TABLE TB_PART_INFO
  ADD CONSTRAINT FK_tq6lbn3mp0vsfc6qqu7wxy54g FOREIGN KEY (PAYLOADINFO_ID) REFERENCES TB_USER_MESSAGE (ID_PK);

ALTER TABLE TB_RAWENVELOPE_LOG
  ADD CONSTRAINT FK_usermsg_id_fk_rawenv_id FOREIGN KEY (USERMESSAGE_ID_FK) REFERENCES TB_USER_MESSAGE (ID_PK);

ALTER TABLE TB_PARTY_ID
  ADD CONSTRAINT FK_ylub8lptgvsch02mj71euuil FOREIGN KEY (TO_ID) REFERENCES TB_USER_MESSAGE (ID_PK);

CREATE OR REPLACE VIEW V_AUDIT_DETAIL AS SELECT DISTINCT rc.GROUP_NAME                   as AUDIT_TYPE,
                                                         rc.MODIFICATION_TYPE            as ACTION_TYPE,
                                                         ri.USER_NAME                    as USER_NAME,
                                                         ri.REVISION_DATE                as AUDIT_DATE,
                                                         CAST(rc.ENTITY_ID AS CHAR(255)) AS ID,
                                                         CAST(ri.ID AS CHAR(11))         AS REV_ID
                                         FROM TB_REV_INFO ri,
                                              TB_REV_CHANGES rc
                                         WHERE ri.ID = rc.REV
                                         UNION
                                         SELECT aa.AUDIT_TYPE,
                                                aa.MODIFICATION_TYPE,
                                                aa.USER_NAME,
                                                aa.REVISION_DATE,
                                                aa.ENTITY_ID,
                                                '1'
                                         FROM TB_ACTION_AUDIT aa;

CREATE OR REPLACE VIEW V_AUDIT AS
  SELECT *
  FROM V_AUDIT_DETAIL VAD
  ORDER BY VAD.AUDIT_DATE DESC;

-- Changeset src/main/resources/db/changelog-4.0.xml::changelog-3.2-delta-1::martifp
CREATE SEQUENCE HIBERNATE_SEQUENCE
  START WITH 1
  INCREMENT BY 1
  CACHE 20;

-- Changeset src/main/resources/db/changelog-4.0.xml::EDELIVERY-2144_1::thomas dussart
INSERT INTO TB_USER_ROLE (ID_PK, ROLE_NAME)
VALUES ('1', 'ROLE_ADMIN');

INSERT INTO TB_USER_ROLE (ID_PK, ROLE_NAME)
VALUES ('2', 'ROLE_USER');

-- Changeset src/main/resources/db/changelog-4.0.xml::EDELIVERY-3234::CatalinEnache
CREATE INDEX IDX_PROP_NAME_MSGPROPS_ID
  ON TB_PROPERTY (NAME, MESSAGEPROPERTIES_ID);

CREATE INDEX IDX_PROP_NAME_MSGPROPS_ID_VAL
  ON TB_PROPERTY (NAME, MESSAGEPROPERTIES_ID, VALUE);

CREATE INDEX IDX_MSG_LOG_RCV_MSG_ID
  ON TB_MESSAGE_LOG (RECEIVED, MESSAGE_ID);

-- Changeset src/main/resources/db/changelog-4.0.xml::EDELIVERY-3303::dussath
CREATE TABLE TB_ALERT (
  ID_PK                  INTEGER      NOT NULL,
  ALERT_TYPE             VARCHAR2(50) NOT NULL,
  ATTEMPTS_NUMBER        INTEGER,
  MAX_ATTEMPTS_NUMBER    INTEGER      NOT NULL,
  PROCESSED              NUMBER(1),
  PROCESSED_TIME         TIMESTAMP,
  CREATION_TIME          TIMESTAMP,
  REPORTING_TIME         TIMESTAMP,
  REPORTING_TIME_FAILURE TIMESTAMP,
  NEXT_ATTEMPT           TIMESTAMP,
  ALERT_STATUS           VARCHAR2(50) NOT NULL,
  ALERT_LEVEL            VARCHAR2(20) NOT NULL,
  CONSTRAINT PK_TB_ALERT PRIMARY KEY (ID_PK)
);

CREATE TABLE TB_EVENT (
  ID_PK          INTEGER      NOT NULL,
  EVENT_TYPE     VARCHAR2(50) NOT NULL,
  REPORTING_TIME TIMESTAMP,
  CONSTRAINT PK_TB_EVENT PRIMARY KEY (ID_PK)
);

CREATE TABLE TB_EVENT_PROPERTY (
  ID_PK         INTEGER      NOT NULL,
  PROPERTY_TYPE VARCHAR2(50) NOT NULL,
  FK_EVENT      INTEGER      NOT NULL,
  DTYPE         VARCHAR2(31),
  STRING_VALUE  VARCHAR2(255),
  DATE_VALUE    TIMESTAMP,
  CONSTRAINT PK_TB_EVENT_PROPERTY PRIMARY KEY (ID_PK)
);

CREATE INDEX IDX_FK_EVENT_PROPERTY
  ON TB_EVENT_PROPERTY (FK_EVENT);

ALTER TABLE TB_EVENT_PROPERTY
  ADD CONSTRAINT FK_EVENT_PROPERTY_ID FOREIGN KEY (FK_EVENT) REFERENCES TB_EVENT (ID_PK);

CREATE TABLE TB_EVENT_ALERT (
  FK_EVENT INTEGER NOT NULL,
  FK_ALERT INTEGER NOT NULL
);

ALTER TABLE TB_EVENT_ALERT
  ADD CONSTRAINT PK_EVENT_ALERT PRIMARY KEY (FK_EVENT, FK_ALERT);

ALTER TABLE TB_EVENT_ALERT
  ADD CONSTRAINT FK_EVENT_ID FOREIGN KEY (FK_EVENT) REFERENCES TB_EVENT (ID_PK);

CREATE INDEX IDX_FK_EVENT
  ON TB_EVENT_ALERT (FK_EVENT);

ALTER TABLE TB_EVENT_ALERT
  ADD CONSTRAINT FK_ALERT_ID FOREIGN KEY (FK_ALERT) REFERENCES TB_ALERT (ID_PK);

CREATE INDEX IDX_FK_ALERT
  ON TB_EVENT_ALERT (FK_ALERT);

-- Changeset src/main/resources/db/changelog-4.0.xml::EDELIVERY-3361::CatalinEnache
CREATE TABLE TB_MESSAGE_UI (
  ID_PK               INTEGER       NOT NULL,
  MESSAGE_ID          VARCHAR2(255),
  MESSAGE_STATUS      VARCHAR2(255),
  NOTIFICATION_STATUS VARCHAR2(255) NOT NULL,
  MSH_ROLE            VARCHAR2(255) NOT NULL,
  MESSAGE_TYPE        VARCHAR2(255) NOT NULL,
  DELETED             TIMESTAMP,
  RECEIVED            TIMESTAMP,
  SEND_ATTEMPTS       INTEGER,
  SEND_ATTEMPTS_MAX   INTEGER,
  NEXT_ATTEMPT        TIMESTAMP,
  CONVERSATION_ID     VARCHAR2(255),
  FROM_ID             VARCHAR2(255) NOT NULL,
  TO_ID               VARCHAR2(255) NOT NULL,
  FROM_SCHEME         VARCHAR2(255),
  TO_SCHEME           VARCHAR2(255),
  REF_TO_MESSAGE_ID   VARCHAR2(255),
  FAILED              TIMESTAMP,
  RESTORED            TIMESTAMP,
  MESSAGE_SUBTYPE     VARCHAR2(255),
  LAST_MODIFIED       TIMESTAMP DEFAULT sysdate,
  LAST_MODIFIED2      TIMESTAMP DEFAULT sysdate,
  CONSTRAINT PK_TB_MESSAGE_UI PRIMARY KEY (ID_PK)
);

ALTER TABLE TB_MESSAGE_UI
  ADD CONSTRAINT UNI_MSG_UI_MSG_ID UNIQUE (MESSAGE_ID);

CREATE INDEX IDX_MSG_UI_STS_TYPE_STYPE_RCV
  ON TB_MESSAGE_UI (MESSAGE_STATUS, MESSAGE_TYPE, MESSAGE_SUBTYPE, RECEIVED);

CREATE INDEX IDX_MSG_UI_TYPE_STYPE_RCV
  ON TB_MESSAGE_UI (MESSAGE_TYPE, MESSAGE_SUBTYPE, RECEIVED);

CREATE INDEX IDX_MSG_UI_TYPE_RCV
  ON TB_MESSAGE_UI (MESSAGE_TYPE, RECEIVED);

CREATE INDEX IDX_MSG_UI_MSH_ROLE
  ON TB_MESSAGE_UI (MSH_ROLE);

CREATE INDEX IDX_MSG_UI_FROM_SCHEME
  ON TB_MESSAGE_UI (FROM_SCHEME);

CREATE INDEX IDX_MSG_UI_TO_SCHEME
  ON TB_MESSAGE_UI (TO_SCHEME);

CREATE INDEX IDX_MSG_UI_FROM_ID
  ON TB_MESSAGE_UI (FROM_ID);

CREATE INDEX IDX_MSG_UI_TO_ID
  ON TB_MESSAGE_UI (TO_ID);

CREATE INDEX IDX_MSG_UI_REF_MSG_ID
  ON TB_MESSAGE_UI (REF_TO_MESSAGE_ID);

CREATE INDEX IDX_MSG_UI_CONV_ID
  ON TB_MESSAGE_UI (CONVERSATION_ID);

-- Changeset src/main/resources/db/changelog-4.0.xml::EDELIVERY-3361-1::CatalinEnache
CREATE OR REPLACE VIEW V_MESSAGE_UI_DIFF AS ((SELECT message_id,
                                                     message_status,
                                                     notification_status,
                                                     msh_role,
                                                     message_type,
                                                     deleted,
                                                     received,
                                                     send_attempts,
                                                     send_attempts_max,
                                                     next_attempt,
                                                     conversation_id,
                                                     from_id,
                                                     to_id,
                                                     from_scheme,
                                                     to_scheme,
                                                     ref_to_message_id,
                                                     failed,
                                                     restored,
                                                     message_subtype
                                              FROM (SELECT message_log.message_id,
                                                           message_log.message_status,
                                                           message_log.notification_status,
                                                           message_log.msh_role,
                                                           message_log.message_type,
                                                           message_log.deleted,
                                                           message_log.received,
                                                           message_log.send_attempts,
                                                           message_log.send_attempts_max,
                                                           message_log.next_attempt,
                                                           user_message.coll_info_convers_id AS conversation_id,
                                                           partyid5_.value                   AS from_id,
                                                           partyid6_.value                   AS to_id,
                                                           property.value                    AS from_scheme,
                                                           property2.value                   AS to_scheme,
                                                           message_info.ref_to_message_id,
                                                           message_log.failed,
                                                           message_log.restored,
                                                           message_log.message_subtype
                                                    FROM tb_message_log message_log
                                                           LEFT OUTER JOIN tb_message_info message_info
                                                             ON message_log.message_id = message_info.message_id,
                                                         tb_user_message user_message
                                                           LEFT OUTER JOIN tb_property property
                                                             ON user_message.id_pk = property.messageproperties_id
                                                           LEFT OUTER JOIN tb_property property2
                                                             ON user_message.id_pk = property2.messageproperties_id
                                                           LEFT OUTER JOIN tb_party_id partyid5_
                                                             ON user_message.id_pk = partyid5_.from_id
                                                           LEFT OUTER JOIN tb_party_id partyid6_
                                                             ON user_message.id_pk = partyid6_.to_id
                                                    WHERE user_message.messageinfo_id_pk = message_info.id_pk
                                                      AND property.name = 'originalSender'
                                                      AND property2.name = 'finalRecipient'
                                                    UNION
                                                    SELECT message_log.message_id,
                                                           message_log.message_status,
                                                           message_log.notification_status,
                                                           message_log.msh_role,
                                                           message_log.message_type,
                                                           message_log.deleted,
                                                           message_log.received,
                                                           message_log.send_attempts,
                                                           message_log.send_attempts_max,
                                                           message_log.next_attempt,
                                                           ''              AS conversation_id,
                                                           partyid7_.value AS from_id,
                                                           partyid8_.value AS to_id,
                                                           property.value  AS from_scheme,
                                                           property2.value AS to_scheme,
                                                           message_info.ref_to_message_id,
                                                           message_log.failed,
                                                           message_log.restored,
                                                           message_log.message_subtype
                                                    FROM tb_message_log message_log
                                                           CROSS JOIN tb_messaging messaging
                                                           INNER JOIN tb_signal_message signalmess2_
                                                             ON messaging.signal_message_id = signalmess2_.id_pk
                                                           LEFT OUTER JOIN tb_message_info message_info
                                                             ON signalmess2_.messageinfo_id_pk = message_info.id_pk
                                                           INNER JOIN tb_user_message user_message
                                                             ON messaging.user_message_id = user_message.id_pk
                                                           LEFT OUTER JOIN tb_property property
                                                             ON user_message.id_pk = property.messageproperties_id
                                                           LEFT OUTER JOIN tb_property property2
                                                             ON user_message.id_pk = property2.messageproperties_id
                                                           LEFT OUTER JOIN tb_party_id partyid7_
                                                             ON user_message.id_pk = partyid7_.from_id
                                                           LEFT OUTER JOIN tb_party_id partyid8_
                                                             ON user_message.id_pk = partyid8_.to_id
                                                           CROSS JOIN tb_message_info message_info2
                                                    WHERE user_message.messageinfo_id_pk = message_info2.id_pk
                                                      AND message_info.message_id = message_log.message_id
                                                      AND message_info.ref_to_message_id = message_info2.message_id
                                                      AND property.name = 'originalSender'
                                                      AND property2.name = 'finalRecipient') result
                                              WHERE result.received BETWEEN TIMESTAMPADD('HOUR', -48, CURRENT_TIMESTAMP) AND TIMESTAMPADD('HOUR', 1, CURRENT_TIMESTAMP))
    MINUS
    SELECT message_id, message_status, notification_status, msh_role, message_type, deleted, received, send_attempts, send_attempts_max, next_attempt, conversation_id, from_id, to_id, from_scheme, to_scheme, ref_to_message_id, failed, restored, message_subtype
    FROM TB_MESSAGE_UI
    WHERE received BETWEEN TIMESTAMPADD('HOUR', -48, CURRENT_TIMESTAMP) AND TIMESTAMPADD('HOUR', 1, CURRENT_TIMESTAMP));

-- Changeset src/main/resources/db/changelog-4.0-quartz.xml::EDELIVERY-3425::migueti
CREATE TABLE QRTZ_BLOB_TRIGGERS (
  SCHED_NAME    VARCHAR2(120) NOT NULL,
  TRIGGER_NAME  VARCHAR2(200) NOT NULL,
  TRIGGER_GROUP VARCHAR2(200) NOT NULL,
  BLOB_DATA     BLOB
);

CREATE TABLE QRTZ_CALENDARS (
  SCHED_NAME    VARCHAR2(120) NOT NULL,
  CALENDAR_NAME VARCHAR2(200) NOT NULL,
  CALENDAR_BLOB BLOB          NOT NULL
);

CREATE TABLE QRTZ_CRON_TRIGGERS (
  SCHED_NAME      VARCHAR2(120) NOT NULL,
  TRIGGER_NAME    VARCHAR2(200) NOT NULL,
  TRIGGER_GROUP   VARCHAR2(200) NOT NULL,
  CRON_EXPRESSION VARCHAR2(120) NOT NULL,
  TIME_ZONE_ID    VARCHAR2(80)
);

CREATE TABLE QRTZ_FIRED_TRIGGERS (
  SCHED_NAME        VARCHAR2(120) NOT NULL,
  ENTRY_ID          VARCHAR2(95)  NOT NULL,
  TRIGGER_NAME      VARCHAR2(200) NOT NULL,
  TRIGGER_GROUP     VARCHAR2(200) NOT NULL,
  INSTANCE_NAME     VARCHAR2(200) NOT NULL,
  FIRED_TIME        NUMBER(38, 0) NOT NULL,
  SCHED_TIME        NUMBER(38, 0) NOT NULL,
  PRIORITY          INTEGER       NOT NULL,
  STATE             VARCHAR2(16)  NOT NULL,
  JOB_NAME          VARCHAR2(200),
  JOB_GROUP         VARCHAR2(200),
  IS_NONCONCURRENT  NUMBER(1),
  REQUESTS_RECOVERY NUMBER(1)
);

CREATE TABLE QRTZ_JOB_DETAILS (
  SCHED_NAME        VARCHAR2(120) NOT NULL,
  JOB_NAME          VARCHAR2(200) NOT NULL,
  JOB_GROUP         VARCHAR2(200) NOT NULL,
  DESCRIPTION       VARCHAR2(250),
  JOB_CLASS_NAME    VARCHAR2(250) NOT NULL,
  IS_DURABLE        NUMBER(1)     NOT NULL,
  IS_NONCONCURRENT  NUMBER(1)     NOT NULL,
  IS_UPDATE_DATA    NUMBER(1)     NOT NULL,
  REQUESTS_RECOVERY NUMBER(1)     NOT NULL,
  JOB_DATA          BLOB
);

CREATE TABLE QRTZ_LOCKS (
  SCHED_NAME VARCHAR2(120) NOT NULL,
  LOCK_NAME  VARCHAR2(40)  NOT NULL
);

CREATE TABLE QRTZ_PAUSED_TRIGGER_GRPS (
  SCHED_NAME    VARCHAR2(120) NOT NULL,
  TRIGGER_GROUP VARCHAR2(200) NOT NULL
);

CREATE TABLE QRTZ_SCHEDULER_STATE (
  SCHED_NAME        VARCHAR2(120) NOT NULL,
  INSTANCE_NAME     VARCHAR2(200) NOT NULL,
  LAST_CHECKIN_TIME NUMBER(38, 0) NOT NULL,
  CHECKIN_INTERVAL  NUMBER(38, 0) NOT NULL
);

CREATE TABLE QRTZ_SIMPLE_TRIGGERS (
  SCHED_NAME      VARCHAR2(120) NOT NULL,
  TRIGGER_NAME    VARCHAR2(200) NOT NULL,
  TRIGGER_GROUP   VARCHAR2(200) NOT NULL,
  REPEAT_COUNT    NUMBER(38, 0) NOT NULL,
  REPEAT_INTERVAL NUMBER(38, 0) NOT NULL,
  TIMES_TRIGGERED NUMBER(38, 0) NOT NULL
);

CREATE TABLE QRTZ_SIMPROP_TRIGGERS (
  SCHED_NAME    VARCHAR2(120) NOT NULL,
  TRIGGER_NAME  VARCHAR2(200) NOT NULL,
  TRIGGER_GROUP VARCHAR2(200) NOT NULL,
  STR_PROP_1    VARCHAR2(512),
  STR_PROP_2    VARCHAR2(512),
  STR_PROP_3    VARCHAR2(512),
  INT_PROP_1    INTEGER,
  INT_PROP_2    INTEGER,
  LONG_PROP_1   NUMBER(38, 0),
  LONG_PROP_2   NUMBER(38, 0),
  DEC_PROP_1    DECIMAL(13, 4),
  DEC_PROP_2    DECIMAL(13, 4),
  BOOL_PROP_1   NUMBER(1),
  BOOL_PROP_2   NUMBER(1)
);

CREATE TABLE QRTZ_TRIGGERS (
  SCHED_NAME     VARCHAR2(120) NOT NULL,
  TRIGGER_NAME   VARCHAR2(200) NOT NULL,
  TRIGGER_GROUP  VARCHAR2(200) NOT NULL,
  JOB_NAME       VARCHAR2(200) NOT NULL,
  JOB_GROUP      VARCHAR2(200) NOT NULL,
  DESCRIPTION    VARCHAR2(250),
  NEXT_FIRE_TIME NUMBER(38, 0),
  PREV_FIRE_TIME NUMBER(38, 0),
  PRIORITY       INTEGER,
  TRIGGER_STATE  VARCHAR2(16)  NOT NULL,
  TRIGGER_TYPE   VARCHAR2(8)   NOT NULL,
  START_TIME     NUMBER(38, 0) NOT NULL,
  END_TIME       NUMBER(38, 0),
  CALENDAR_NAME  VARCHAR2(200),
  MISFIRE_INSTR  NUMBER(5),
  JOB_DATA       BLOB
);

ALTER TABLE QRTZ_BLOB_TRIGGERS
  ADD CONSTRAINT PRIMARY_01 PRIMARY KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP);

ALTER TABLE QRTZ_CALENDARS
  ADD CONSTRAINT PRIMARY_02 PRIMARY KEY (SCHED_NAME, CALENDAR_NAME);

ALTER TABLE QRTZ_CRON_TRIGGERS
  ADD CONSTRAINT PRIMARY_03 PRIMARY KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP);

ALTER TABLE QRTZ_FIRED_TRIGGERS
  ADD CONSTRAINT PRIMARY_04 PRIMARY KEY (SCHED_NAME, ENTRY_ID);

ALTER TABLE QRTZ_JOB_DETAILS
  ADD CONSTRAINT PRIMARY_05 PRIMARY KEY (SCHED_NAME, JOB_NAME, JOB_GROUP);

ALTER TABLE QRTZ_LOCKS
  ADD CONSTRAINT PRIMARY_06 PRIMARY KEY (SCHED_NAME, LOCK_NAME);

ALTER TABLE QRTZ_PAUSED_TRIGGER_GRPS
  ADD CONSTRAINT PRIMARY_07 PRIMARY KEY (SCHED_NAME, TRIGGER_GROUP);

ALTER TABLE QRTZ_SCHEDULER_STATE
  ADD CONSTRAINT PRIMARY_08 PRIMARY KEY (SCHED_NAME, INSTANCE_NAME, LAST_CHECKIN_TIME, CHECKIN_INTERVAL);

ALTER TABLE QRTZ_SIMPLE_TRIGGERS
  ADD CONSTRAINT PRIMARY_09 PRIMARY KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP);

ALTER TABLE QRTZ_SIMPROP_TRIGGERS
  ADD CONSTRAINT PRIMARY_10 PRIMARY KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP);

ALTER TABLE QRTZ_TRIGGERS
  ADD CONSTRAINT PRIMARY_11 PRIMARY KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP);

CREATE INDEX IDX_QRTZ_FT_INST_JOB_REQ_RCVRY
  ON QRTZ_FIRED_TRIGGERS (SCHED_NAME, INSTANCE_NAME, REQUESTS_RECOVERY);

CREATE INDEX IDX_QRTZ_FT_JG
  ON QRTZ_FIRED_TRIGGERS (SCHED_NAME, JOB_GROUP);

CREATE INDEX IDX_QRTZ_FT_J_G
  ON QRTZ_FIRED_TRIGGERS (SCHED_NAME, JOB_NAME, JOB_GROUP);

CREATE INDEX IDX_QRTZ_FT_TG
  ON QRTZ_FIRED_TRIGGERS (SCHED_NAME, TRIGGER_GROUP);

CREATE INDEX IDX_QRTZ_FT_TRIG_INST_NAME
  ON QRTZ_FIRED_TRIGGERS (SCHED_NAME, INSTANCE_NAME);

CREATE INDEX IDX_QRTZ_FT_T_G
  ON QRTZ_FIRED_TRIGGERS (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP);

CREATE INDEX IDX_QRTZ_J_GRP
  ON QRTZ_JOB_DETAILS (SCHED_NAME, JOB_GROUP);

CREATE INDEX IDX_QRTZ_J_REQ_RECOVERY
  ON QRTZ_JOB_DETAILS (SCHED_NAME, REQUESTS_RECOVERY);

CREATE INDEX IDX_QRTZ_T_C
  ON QRTZ_TRIGGERS (SCHED_NAME, CALENDAR_NAME);

CREATE INDEX IDX_QRTZ_T_G
  ON QRTZ_TRIGGERS (SCHED_NAME, TRIGGER_GROUP);

CREATE INDEX IDX_QRTZ_T_J
  ON QRTZ_TRIGGERS (SCHED_NAME, JOB_NAME, JOB_GROUP);

CREATE INDEX IDX_QRTZ_T_JG
  ON QRTZ_TRIGGERS (SCHED_NAME, JOB_GROUP);

CREATE INDEX IDX_QRTZ_T_NEXT_FIRE_TIME
  ON QRTZ_TRIGGERS (SCHED_NAME, NEXT_FIRE_TIME);

CREATE INDEX IDX_QRTZ_T_NFT_MISFIRE
  ON QRTZ_TRIGGERS (SCHED_NAME, MISFIRE_INSTR, NEXT_FIRE_TIME);

CREATE INDEX IDX_QRTZ_T_NFT_ST
  ON QRTZ_TRIGGERS (SCHED_NAME, TRIGGER_STATE, NEXT_FIRE_TIME);

CREATE INDEX IDX_QRTZ_T_NFT_ST_MISFIRE
  ON QRTZ_TRIGGERS (SCHED_NAME, MISFIRE_INSTR, NEXT_FIRE_TIME, TRIGGER_STATE);

CREATE INDEX IDX_QRTZ_T_NFT_ST_MISFIRE_GRP
  ON QRTZ_TRIGGERS (SCHED_NAME, MISFIRE_INSTR, NEXT_FIRE_TIME, TRIGGER_GROUP, TRIGGER_STATE);

CREATE INDEX IDX_QRTZ_T_N_G_STATE
  ON QRTZ_TRIGGERS (SCHED_NAME, TRIGGER_GROUP, TRIGGER_STATE);

CREATE INDEX IDX_QRTZ_T_N_STATE
  ON QRTZ_TRIGGERS (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP, TRIGGER_STATE);

CREATE INDEX IDX_QRTZ_T_STATE
  ON QRTZ_TRIGGERS (SCHED_NAME, TRIGGER_STATE);

ALTER TABLE QRTZ_BLOB_TRIGGERS
  ADD CONSTRAINT FK_BLOB_TRIGGERS FOREIGN KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP) REFERENCES QRTZ_TRIGGERS (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP);

ALTER TABLE QRTZ_CRON_TRIGGERS
  ADD CONSTRAINT FK_CRON_TRIGGERS FOREIGN KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP) REFERENCES QRTZ_TRIGGERS (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP);

ALTER TABLE QRTZ_SIMPLE_TRIGGERS
  ADD CONSTRAINT FK_SIMPLE_TRIGGERS FOREIGN KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP) REFERENCES QRTZ_TRIGGERS (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP);

ALTER TABLE QRTZ_SIMPROP_TRIGGERS
  ADD CONSTRAINT FK_SIMPROP_TRIGGERS FOREIGN KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP) REFERENCES QRTZ_TRIGGERS (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP);

ALTER TABLE QRTZ_TRIGGERS
  ADD CONSTRAINT FK_TRIGGERS FOREIGN KEY (SCHED_NAME, JOB_NAME, JOB_GROUP) REFERENCES QRTZ_JOB_DETAILS (SCHED_NAME, JOB_NAME, JOB_GROUP);
