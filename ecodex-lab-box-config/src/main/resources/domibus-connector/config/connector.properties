## CONNECTOR PROPERTIES
##
## This file contains the connector configuration properties
## Properties marked with !! must be changed according to your setup/environment!
##


#############################################################################
############################ PROFILES     ###################################
#############################################################################
# defines the by the spring application loaded profiles
#

# BigData Storage profiles:
# storage-db activates the bigFileStorage into database
# storage-fs activates the filesystemStorage
#
# NOTE: only one storage profile at once can be active!
#

# Gw Connection Profiles:
# gwlink-ws activates the GatewayLink communication over webservices
# gwlink-jms activates features for using jms queues to communicate to the gw !!NOT IMPLEMENTED YET!!
#

# Backend Connection Profiles:
# backendlink-ws activates the backend communication over webservices
# backendlink-jms activates features for using jms queues to backend to the backend clients !!NOT IMPLEMENTED YET!!
#

# EXPERIMENTAL:
# Setup Wizard Profile:
# setup-wizard activates the setup-wizard profile which checks if the property config wizard version
# matches the version of the connector. If the version does not match the connector starts a minimal
# configuration UI for basic setup [db-connection, property-loading, keystores]
# so the WebUI can start
#
#

#this example stores the data into db connects over webservices to gw and backends
#spring.profiles.active=storage-db,gwlink-ws,backendlink-ws
#this example stores into filesystem connects over webservices to gw and backends
spring.profiles.active=storage-fs,gwlink-ws,backendlink-ws


#############################################################################
############################ WORKSHOP-SPECIFIC ##############################
#############################################################################

#exec.workshop.user.number=10
#exec.workshop.package.path=C:/Entwicklung/ecodexENV/EXECUser10
#exec.work.dir=C:/Entwicklung/ecodexENV/EXECUser10/store
#connector.database.server=localhost


#############################################################################
############################ GATEWAY LINK ###################################
#############################################################################

# defines the endpoint address of the gateway webservice, the gateway name and role.

# The connector is using this webservice address to submit messages to the gateway
connector.gatewaylink.ws.submissionEndpointAddress=http://127.0.0.1:8${lab.id}0/domibus/services/domibusConnectorSubmissionWebservice

#############################  conn - gw keystore  #############################

connector.gatewaylink.ws.key-store.path=file:config/keystores/connector-gwlink-keystore.jks
#connector.gatewaylink.ws.key-store.path=/C:/configuration/connector-backend-keystore.jks
connector.gatewaylink.ws.key-store.password=12345
connector.gatewaylink.ws.private-key.alias=connector
#connector.gatewaylink.ws.private-key.alias=WRONG
connector.gatewaylink.ws.private-key.password=12345

#connector.gatewaylink.ws.keyStore.path=classpath:store/connector-backend-keystore.jks
#connector.gatewaylink.ws.keyStore.password=12345
#connector.gatewaylink.ws.private-key.alias=execcon1

connector.gatewaylink.ws.trust-store.path=file:config/keystores/connector-gwlink-truststore.jks
connector.gatewaylink.ws.trust-store.password=12345
connector.gatewaylink.ws.encrypt-alias=gw

################################################################################
############################ CONNECTOR-TESTS ###################################
################################################################################

# Service and action entered here according to the p-modes used.
# Enabled and used messages received with that combination will not be sent to the backend of the connector,
# but will be answered with evidences after processed in the connector.
connector.test.service=testService1
connector.test.action=tc2Action

##################################################################################
############################ EVIDENCES TOOLKIT ###################################
##################################################################################

# All timeout values apply the following rules:
# -- Set to 0, they will be ignored
# -- After a message is rejected, also a positive received evidence afterwards does not change the status.
# -- All values can be defined as h hours, m minutes, s seconds, ms milliseconds

# boolean value to turn on/off the check if evidences for outgoing messages have been received yet.
connector.controller.evidence.timeoutActive=true
# How often should the timeout of an evidence be checked
# The default is every hour the messages are checked for timed out evidences
connector.controller.evidence.checkTimeout=1m
# After this period, if an outgoing message was sent to the gateway successfully and no RelayREMMD evidence was received,
# a RelayREMMDRejection will be created for this evidence an sent back to the national system.
connector.controller.evidence.relayREMMDTimeout=15m
# After this period, if an outgoing message was sent to the gateway successfully and no Delivery/Non-Delivery evidence was received,
# a Non-Delivery will be created for this evidence an sent back to the national system.
connector.controller.evidence.deliveryTimeout=15m
# After this period, if an outgoing message was sent to the gateway successfully and no Retrieval/Non-Retrieval evidence was received,
# a Non-Retrieval will be created for this evidence an sent back to the national system.
connector.controller.evidence.retrievalTimeout=15m

# This property should show the EXTERNAL address where the gateway can be reached. Should match the address published with the pmodes.
#obviously does not make match sense in this testlab environment
gateway.endpoint.address=http://gw/domibus/services/msh

#This is the name of your Gateway. This should match the PartyID within the pmodes.
gateway.name=GW

# Address data for the generating of the evidences.
postal.address.street=Teststreet 1
postal.address.locality=Testcity
postal.address.zip-code=12345
postal.address.country=AT


##################################################################################
############################ SECURITY TOOLKIT ####################################
##################################################################################
# Settings for the security library for generating the Token.
token.issuer.country=AT
token.issuer.service-provider=TestProvider
# This can rather be SIGNATURE_BASED, then the main document needs to be signed, or AUTHENTICATION_BASED, in that case the security interface needs
# to be implemented (see connector.security.toolkit.implementation.class.name)
token.issuer.advanced-electronic-system-type=AUTHENTICATION_BASED

token.issuer.identity-provider=Test Identity provider

# The connectors security lib is loading trusted lists over
# the network:

security.lotl.scheme.uri=https://ec.europa.eu/information_society/policy/esignature/trusted-list/tl.html
security.lotl.url=https://ec.europa.eu/information_society/policy/esignature/trusted-list/tl-mp.xml
security.oj.url=http://eur-lex.europa.eu/legal-content/EN/TXT/?uri=uriserv:OJ.C_.2016.233.01.0001.01.ENG


##################################################################################
############################ KEYSTORES/TRUSTSTORES ###############################
##################################################################################


#############################  backend keystore  #############################
#defines the location of the backend keyStore:
connector.backend.ws.key.key-store.path=file:config/keystores/connector-backend.jks
#defines the key store password:
connector.backend.ws.key.key-store.password=12345
#defines the key alias for the key which is used to sign the messages:
connector.backend.ws.key.private-key.alias=connector
#defines the key password:
connector.backend.ws.key.private-key.password=12345

connector.backend.ws.trust.trust-store.path=file:config/keystores/connector-backend.jks
connector.backend.ws.trust.trust-store.password=12345





#############################  evidences keystore  #############################
# To be able to sign evidences a keystore with certificate and private key integrated must be used. Here are the
# credentials to set.
connector.evidences.key-store.path=file:config/keystores/connector-ecodex-keystore.jks
# if the keystore is password protected enter the password here:
connector.evidences.key-store.password=12345
# if the
connector.evidences.private-key.alias=connector${lab.id}
connector.evidences.private-key.password=12345


#############################  ASIC-S keystore  #############################

# To be able to sign the secure contents of the message, a keystore with certificate and private key integrated must be used. Here are the
# credentials to set.
connector.security.key-store.path=file:config/keystores/connector-ecodex-keystore.jks
connector.security.key-store.password=12345
connector.security.private-key.alias=connector${lab.id}
connector.security.private-key.password=12345

#############################  connector truststore  #############################

# Holds all public keys of partners to validate the received ASIC-S containers against. Also contains public keys of signatures,
# if documents to be sent are signed.
connector.security.trust-store.path=file:config/keystores/connector-ecodex-truststore.jks
connector.security.trust-store.password=12345




##################################################################################
############################ PROXY CONFIGURATION #################################
##################################################################################



# If the connector should use a http proxy for loading the trusted lists  you have to configure
# the proxy values here:
#
#HTTP proxy settings
http.proxy.enabled=${http.proxy.enabled}
http.proxy.host=172.30.9.12
http.proxy.port=8080
http.proxy.user=
http.proxy.password=

#HTTPS proxy settings
https.proxy.enabled=${https.proxy.enabled}
https.proxy.host=172.30.9.12
https.proxy.port=8080
https.proxy.user=
https.proxy.password=



##################################################################################
############################ DATASOURCE CONFIGURATION ############################
##################################################################################

# You can just define a spring datasource here or use datasource provided by the container
# Hint: Don't forget to add your jdbc driver jar to your web containers classpath!

# Container defined datasource name:

# JNDI location of the datasource. Class, url, username & password are ignored when set!
#spring.datasource.jndi-name=domibusWebConnectorDS

###### OR ######

# Application defined datasource:

# Fully qualified name of the JDBC driver. Auto-detected based on the URL by default.
spring.datasource.driver-class-name=org.h2.Driver

# JDBC URL of the database.
spring.datasource.url=jdbc:h2:file:./data/connector.db

# Login username of the database.
spring.datasource.username=connector

# Login password of the database.
spring.datasource.password=


## EXPERIMENTAL
########## AUTOMATIC DATABASE INITIALIZATION ########
spring.liquibase.enabled=true
#spring.liquibase.change-log=classpath:db/changelog/install.xml
spring.liquibase.change-log=file:./config/db-scripts/initdb.xml



########## DATASOURCE EXPERTs CONFIGURATION: ########
# For further information consult: https://docs.spring.io/spring-boot/docs/1.5.8.RELEASE/reference/html/common-application-properties.html

## If you want to use your custom connection pooling, you can define it here:
# Fully qualified name of the connection pool implementation to use. By default, it is auto-detected from the classpath.
#spring.datasource.type=

#spring.datasource.hikari.*= # Hikari specific settings





##################################################################################
############################ FILESYSTEM STORAGE CONFIGURATION ####################
##################################################################################

# activate the storage-fs profile and make sure that it is the only activated storage profile!
#
#
connector.persistence.filesystem.storagePath=./data/fsstorage/
#should the directory created recursivly if it does not exists?
connector.persistence.filesystem.createDir=true
#
#EXPERIMENTAL
#should the content of the files be aes encrypted with a random key? key is stored into the database
connector.persistence.filesystem.encryptionActive=false

##################################################################################
############################ LOGGING CONFIGURATION ###############################
##################################################################################
#
#
logging.config=file:config/log4j2.xml

#### embedded tomcat configuration
server.port=8${lab.id}1


